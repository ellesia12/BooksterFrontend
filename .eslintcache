[{"/Users/imodrew/BooksterFrontend/src/App.js":"1","/Users/imodrew/BooksterFrontend/src/components/Footer.js":"2","/Users/imodrew/BooksterFrontend/src/components/NavBar.js":"3","/Users/imodrew/BooksterFrontend/src/components/LogIn.js":"4","/Users/imodrew/BooksterFrontend/src/components/ChatRoom.js":"5","/Users/imodrew/BooksterFrontend/src/components/Chat.js":"6","/Users/imodrew/BooksterFrontend/src/index.js":"7","/Users/imodrew/BooksterFrontend/src/pages/HomePage.js":"8","/Users/imodrew/BooksterFrontend/src/components/Register.js":"9","/Users/imodrew/BooksterFrontend/src/components/Profile.js":"10","/Users/imodrew/BooksterFrontend/src/components/BookShelf.js":"11","/Users/imodrew/BooksterFrontend/src/components/Introduction.js":"12","/Users/imodrew/BooksterFrontend/src/theme.js":"13","/Users/imodrew/BooksterFrontend/src/components/HowItWorks.js":"14","/Users/imodrew/BooksterFrontend/src/components/BookCard.js":"15","/Users/imodrew/BooksterFrontend/src/components/Search.js":"16"},{"size":1550,"mtime":1606902658849,"results":"17","hashOfConfig":"18"},{"size":1300,"mtime":1606819015569,"results":"19","hashOfConfig":"18"},{"size":3932,"mtime":1606900942403,"results":"20","hashOfConfig":"18"},{"size":5218,"mtime":1606841951552,"results":"21","hashOfConfig":"18"},{"size":1664,"mtime":1606915567427,"results":"22","hashOfConfig":"18"},{"size":782,"mtime":1606928302673,"results":"23","hashOfConfig":"18"},{"size":433,"mtime":1606819015571,"results":"24","hashOfConfig":"18"},{"size":728,"mtime":1606819015571,"results":"25","hashOfConfig":"18"},{"size":5998,"mtime":1606819015571,"results":"26","hashOfConfig":"18"},{"size":228,"mtime":1606819015570,"results":"27","hashOfConfig":"18"},{"size":266,"mtime":1606841951551,"results":"28","hashOfConfig":"18"},{"size":1488,"mtime":1606819015570,"results":"29","hashOfConfig":"18"},{"size":467,"mtime":1606819015572,"results":"30","hashOfConfig":"18"},{"size":3509,"mtime":1606819015569,"results":"31","hashOfConfig":"18"},{"size":3463,"mtime":1606827216895,"results":"32","hashOfConfig":"18"},{"size":4760,"mtime":1606826644449,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14hopn9",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/imodrew/BooksterFrontend/src/App.js",[],"/Users/imodrew/BooksterFrontend/src/components/Footer.js",["72","73"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport { BottomNavigation, BottomNavigationAction, Link, Box } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport InstagramIcon from '@material-ui/icons/Instagram';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        background: `#C38D9E`,\n        height: '150px'\n    },\n    box:{\n        display: 'flex',\n        flexDirection: 'column',\n        alignContent: 'start',\n        justifyContent: 'center'\n    }\n    \n}));\n\nconst Footer = () => {\n\n    const classes = useStyles();\n    const [value, setValue] = useState('recents');\n    \n    const handleChange = (event, newValue) =>{\n        setValue(newValue);\n    };\n    \n\n\n    return(\n<>\n    <BottomNavigation value={value} onChange={handleChange} className={classes.root} >   \n    \n        <BottomNavigationAction label=\"search: instagram\" value=\"Instagram\" icon={<InstagramIcon color=\"#fcd392\"/> } />\n      \n        {/* <Link href=\"https://github.com/ellesia12/BooksterFrontend\" > */}\n            <BottomNavigationAction label=\"username: imodrews\" value=\"github\" icon={<GitHubIcon color=\"#fcd392\"/>} />\n        {/* </Link> */}\n    </BottomNavigation>\n</>\n\n    )}\n\nexport default Footer;",["74","75"],"/Users/imodrew/BooksterFrontend/src/components/NavBar.js",["76"],"/Users/imodrew/BooksterFrontend/src/components/LogIn.js",["77","78","79","80","81","82","83","84"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\n\nimport Profile from \"./Profile\";\nimport { Redirect, Link, NavLink, useHistory } from \"react-router-dom\";\nimport BookShelf from \"./BookShelf\";\nimport Cookies from \"js-cookie\"\n\nconst InputField = withStyles({\n    root:{\n        \"& label.Mui-focused\":{\n            color: \"#DB5CA2\"\n        },\n        \"& label\":{\n            color: \"5CDB95\",\n            fontFamily:\"'Oswald', sans-serif\"\n        },\n        \"&:hover fieldSet\":{\n            borderColor: \"5CDB95\"\n        },\n        \"&.Mui-focused fieldSet\":{\n            borderColor: \"5CDB95\"\n        }\n    }\n})(TextField);\n\n\nconst useStyles = makeStyles(theme=>({\n    form:{\n        top:\"50%\",\n        left:\"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: \"absolute\"\n    },\n    button: {\n        marginTop: \"1rem\",\n        color: \"#C38D9E\",\n        borderColor: \"white\",\n        borderRadius: \"18px\",\n        fontFamily:\"'Oswald', sans-serif\"\n    },\n    header: {\n        textAlign: \"center\",\n        textTransform:\"uppercase\",\n        marginBottom:\"30px\",\n        fontFamily: \"font1\"\n    },\n    word: {\n        fontFamily:\"'Oswald', sans-serif\"\n    }\n}))\n\n\n\n\nconst LogIn = ({props}) =>{\n\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [loginData, setLoginData] = useState({\n        email: '',\n        password: ''\n    })\n\n    const [userInfo, setUserInfo] = useState(null)\n    const [loggedIn, setLoggedIn] = useState(false)\n\n\n\n\n\n    const handleLogin = (e) =>{\n        e.preventDefault();\n        \n    const postOptions = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({ loginData })\n    }\n        let token\n\n        fetch('http://localhost:3000/login', postOptions)\n        .then(\n            (response) => {\n                token = response.headers.get('x-secret-token')\n              if (response.ok) return response.json();\n              throw new Error(\"Network Error while fetching quote\");\n            },\n            (networkError) => {\n              console.log(networkError.message);\n            }\n          )\n          .then((data) => {\n              console.log(data)\n            Cookies.set('Bookster', token);\n            setUserInfo(data[0])\n            \n          })\n          .catch((e) => console.log(e.message));\n            /* .then((result)=> setUserInfo(result.rows[0]))\n            .catch(error=>console.log(error)) */\n            // .then(result=> console.log(result.rows[0]))\n            \n        }\n\nuseEffect(()=> {\n    if (userInfo){\n    const postOptions = {\n        method: 'POST',\n        headers: {'Authorization': `Bearer ${Cookies.get('Bookster')}`},\n        \n    }\n    \n    fetch('http://localhost:3000/login/me', postOptions)\n    .then(res=> res.json())\n    .then(data=>console.log(data))\n    }\n    \n\n},[userInfo])\n\n\n\n    const handleChange = (e) =>{\n        setLoginData({...loginData, [e.target.name]: e.target.value })\n    }\n// need to add ONSUBMIT function \n\n    return (\n        <>\n            <Box component=\"div\" style={{background:\"#C38D9E\", height:\"100vh\"}}>\n                <Grid container justify=\"center\">\n                    <Box component=\"form\"  className={classes.form}>\n                        <Typography variant=\"h3\" className={classes.header}>\n                            Log In Below\n                        </Typography>\n                        <InputField \n                            label=\"Email\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"email\"\n                            value={loginData.email}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <InputField \n                            label=\"Password\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"password\"\n                            value={loginData.password}\n                            onChange={handleChange}\n                        />\n                        \n                        <Button type=\"submit\" onClick={handleLogin}  variant=\"contained\" fullWidth={true} className={classes.button} >\n                            Log In\n                        </Button>\n                        {userInfo ? <Typography className={classes.word}>Successful login!  Go to your profile {userInfo.first_name} </Typography> \n                        : <Typography className={classes.word}>you are not logged in! log in or register for an account</Typography>}    \n                        \n                        <Button   variant=\"contained\" fullWidth={true} className={classes.button} >\n                            Register for Bookster Here!\n                        </Button>\n                       \n                    </Box>         \n                </Grid>\n           </Box>\n        </>\n    );\n}\n\n\n\n\nexport default LogIn;\n\n","/Users/imodrew/BooksterFrontend/src/components/ChatRoom.js",["85","86"],"/Users/imodrew/BooksterFrontend/src/components/Chat.js",["87"],"/Users/imodrew/BooksterFrontend/src/index.js",[],"/Users/imodrew/BooksterFrontend/src/pages/HomePage.js",["88"],"import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport Introduction from \"../components/Introduction\";\nimport HowItWorks from \"../components/HowItWorks\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\n// import components\nimport NavBar from \"../components/NavBar\"\nimport Footer from \"../components/Footer\"\n\n\nconst useStyles = makeStyles(theme => ({\n   \n    root: {\n        backgroundColor: 'white',\n        height: \"300px\"\n    }\n\n\n    }))\n\nconst HomePage = () => {\n\nconst classes = useStyles();\n    return(\n        <div className={classes.root}>\n            <NavBar />\n            <Introduction />\n            <HowItWorks />\n            <Footer />\n        </div>\n\n    )\n}\n\nexport default HomePage;","/Users/imodrew/BooksterFrontend/src/components/Register.js",["89"],"import React, { useState, useEffect } from \"react\";\nimport '../App.css';\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\n\nconst InputField = withStyles({\n    root:{\n        \"& label.Mui-focused\":{\n            color: \"#DB5CA2\"\n        },\n        \"& label\":{\n            color: \"5CDB95\",\n            fontFamily:\"'Oswald', sans-serif\"\n        },\n        \"&:hover fieldSet\":{\n            borderColor: \"5CDB95\"\n        },\n        \"&.Mui-focused fieldSet\":{\n            borderColor: \"5CDB95\"\n        }\n    }\n})(TextField);\n\n\nconst useStyles = makeStyles(theme=>({\n    form:{\n        top:\"50%\",\n        left:\"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: \"absolute\"\n    },\n    button: {\n        marginTop: \"1rem\",\n        color: \"#C38D9E\",\n        borderColor: \"white\",\n        borderRadius: \"18px\",\n        fontFamily:\"'Oswald', sans-serif\"\n    },\n    header: {\n        textAlign: \"center\",\n        textTransform:\"uppercase\",\n        marginBottom:\"30px\",\n        fontFamily: \"font1\",\n    },\n    text: {\n        fontFamily: \"'Oswald', sans-serif\",\n        \n    },\n    word: {\n        fontFamily:\"'Oswald', sans-serif\"\n    }\n}))\n\n\n\n\n\n\n\n\nconst Register = () =>{\n    const classes = useStyles();\n    \n    \n    const [registerData, setRegisterData] = useState({\n        first_name: '',\n        surname: '',\n        email: '',\n        password: '',\n        bio: '',\n        fav_book: ''\n    });\n\nconst postOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({ registerData })\n}\n\n//or use registerData.field \n\n\n\n\nconst handleRegister = (e) =>{\n    e.preventDefault();\n    console.log(registerData)\n    fetch('http://localhost:3000/register', postOptions)\n        .then(response => response.json())\n        .then(data => console.log(data))     \n}\n\nconst handleChange = (e) =>{\n    setRegisterData({...registerData, [e.target.name]: e.target.value })\n    \n}\n\n// need to add ONSUBMIT function \n//add link to log in page\n\n    return (\n        <>\n            <Box component=\"div\" style={{background:\"#C38D9E\", height:\"100vh\"}} className={classes.text}>\n                <Grid container justify=\"center\">\n                    <Box component=\"form\"  className={classes.form}>\n                        <Typography variant=\"h3\" className={classes.header}>\n                            Register for Bookster\n                        </Typography>\n                        <InputField \n                            label=\"First Name\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"first_name\"\n                            className={classes.text}\n                            value={registerData.first_name}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <InputField \n                            label=\"Surname\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"surname\"\n                            value={registerData.surname}\n                            onChange={handleChange}\n                        />\n                         <br />\n                        <InputField \n                            label=\"Email\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"email\"\n                            value={registerData.email}\n                            onChange={handleChange}\n                        />\n                         <br />\n                        <InputField \n                            label=\"Password\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"password\"\n                            value={registerData.password}\n                            onChange={handleChange}\n                            type=\"password\"\n                        />\n                         <br />\n                       {/*  <InputField \n                            label=\"Picture\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"email\"\n                        />\n                        <br /> */}\n                        <InputField \n                            label=\"Short Bio About You\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"bio\"\n                            value={registerData.bio}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <InputField \n                            label=\"What are your favorite books?\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"fav_book\"\n                            value={registerData.fav_book}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <Button type=\"submit\" onClick={handleRegister} variant=\"contained\" fullWidth={true} className={classes.button} >\n                            Register\n                        </Button>\n                        <Typography alignContent=\"center\" className={classes.word}>\n                            Already a user? Sign in <a href=\"/login\">here</a>\n                        </Typography>\n                    </Box>\n                </Grid>\n           </Box>\n        </>\n    );\n}\n\n\n\n\nexport default Register;\n\n","/Users/imodrew/BooksterFrontend/src/components/Profile.js",[],"/Users/imodrew/BooksterFrontend/src/components/BookShelf.js",[],"/Users/imodrew/BooksterFrontend/src/components/Introduction.js",["90"],"import React from 'react';\nimport { Typography, Button, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport bookshelf from \"../Images/idealbookshelf.jpg\";\n\nconst useStyles = makeStyles({\n    \n    position: {\n        display: 'flex',\n        paddingBottom:\"70px\"\n    },\n   \n    buttonPosition: {\n        display: 'flex',\n        justifyContent: 'center',\n        textAlign: 'center',\n        \n\n    },\n\n    button: {\n        fontFamily: \"'Oswald', sans-serif\",\n    },\n    text: {\n        textAlign: 'center',\n        fontFamily: \"'Oswald', sans-serif\",\n\n    },\n    textAndButton: {\n        marginTop: '100px',\n        width: '600px'\n    }\n})\n\n\nconst Introduction = () => {\n\nconst classes = useStyles();\n\nreturn(\n<div className={classes.position}>\n\n       \n<Box className={classes.textAndButton}>\n        <Typography variant=\"h2\" className={classes.text}>Bookster.</Typography>\n        <Typography className={classes.text}>\n        Create your own book club today and connect \n        <br />\n        with friends and make new ones from anywhere in the world!\n        </Typography>\n \n    <Box className={classes.buttonPosition}>\n        <NavLink to='/register'>\n            <Button className={classes.button} >\n            Sign up!\n            </Button>\n        </NavLink>\n     </Box>\n</Box>\n <img \n            src={bookshelf}\n            width=\"500px\"\n        />\n\n</div>\n\n)\n}\n\nexport default Introduction;","/Users/imodrew/BooksterFrontend/src/theme.js",["91"],"/Users/imodrew/BooksterFrontend/src/components/HowItWorks.js",[],"/Users/imodrew/BooksterFrontend/src/components/BookCard.js",["92","93","94","95"],"/Users/imodrew/BooksterFrontend/src/components/Search.js",["96"],{"ruleId":"97","severity":1,"message":"98","line":5,"column":52,"nodeType":"99","messageId":"100","endLine":5,"endColumn":56},{"ruleId":"97","severity":1,"message":"101","line":5,"column":58,"nodeType":"99","messageId":"100","endLine":5,"endColumn":61},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"97","severity":1,"message":"106","line":17,"column":52,"nodeType":"99","messageId":"100","endLine":17,"endColumn":72},{"ruleId":"97","severity":1,"message":"107","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":15},{"ruleId":"97","severity":1,"message":"108","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":18},{"ruleId":"97","severity":1,"message":"98","line":6,"column":20,"nodeType":"99","messageId":"100","endLine":6,"endColumn":24},{"ruleId":"97","severity":1,"message":"109","line":6,"column":26,"nodeType":"99","messageId":"100","endLine":6,"endColumn":33},{"ruleId":"97","severity":1,"message":"110","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":17},{"ruleId":"97","severity":1,"message":"111","line":60,"column":11,"nodeType":"99","messageId":"100","endLine":60,"endColumn":18},{"ruleId":"97","severity":1,"message":"112","line":68,"column":12,"nodeType":"99","messageId":"100","endLine":68,"endColumn":20},{"ruleId":"97","severity":1,"message":"113","line":68,"column":22,"nodeType":"99","messageId":"100","endLine":68,"endColumn":33},{"ruleId":"97","severity":1,"message":"114","line":5,"column":22,"nodeType":"99","messageId":"100","endLine":5,"endColumn":32},{"ruleId":"97","severity":1,"message":"115","line":11,"column":7,"nodeType":"99","messageId":"100","endLine":11,"endColumn":16},{"ruleId":null,"fatal":true,"severity":2,"message":"116","line":20,"column":26},{"ruleId":"97","severity":1,"message":"101","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":13},{"ruleId":"97","severity":1,"message":"117","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"119","line":61,"column":2,"nodeType":"120","endLine":64,"endColumn":11},{"ruleId":"97","severity":1,"message":"121","line":4,"column":7,"nodeType":"99","messageId":"100","endLine":4,"endColumn":12},{"ruleId":"97","severity":1,"message":"122","line":1,"column":16,"nodeType":"99","messageId":"100","endLine":1,"endColumn":24},{"ruleId":"97","severity":1,"message":"123","line":4,"column":16,"nodeType":"99","messageId":"100","endLine":4,"endColumn":25},{"ruleId":"97","severity":1,"message":"124","line":4,"column":27,"nodeType":"99","messageId":"100","endLine":4,"endColumn":38},{"ruleId":"97","severity":1,"message":"125","line":4,"column":40,"nodeType":"99","messageId":"100","endLine":4,"endColumn":50},{"ruleId":"97","severity":1,"message":"98","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":14},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","no-native-reassign",["126"],"no-negated-in-lhs",["127"],"'SettingsInputAntenna' is defined but never used.","'Profile' is defined but never used.","'Redirect' is defined but never used.","'NavLink' is defined but never used.","'BookShelf' is defined but never used.","'history' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","'withStyles' is defined but never used.","'useStyles' is assigned a value but never used.","Parsing error: Unexpected keyword 'true'\n\n  18 | \n  19 |  const socket = io(ENDPOINT), {\n> 20 |         withCredentials: true,\n     |                          ^\n  21 |         extraHeaders:{\n  22 |             \"x-secret-token\": \"Bookster\"\n  23 |         }","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'font1' is assigned a value but never used.","'useState' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","no-global-assign","no-unsafe-negation"]