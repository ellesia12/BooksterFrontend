[{"/Users/imodrew/BooksterFrontend/src/App.js":"1","/Users/imodrew/BooksterFrontend/src/components/Footer.js":"2","/Users/imodrew/BooksterFrontend/src/components/NavBar.js":"3","/Users/imodrew/BooksterFrontend/src/components/LogIn.js":"4","/Users/imodrew/BooksterFrontend/src/components/ChatRoom.js":"5","/Users/imodrew/BooksterFrontend/src/components/Chat.js":"6","/Users/imodrew/BooksterFrontend/src/index.js":"7","/Users/imodrew/BooksterFrontend/src/pages/HomePage.js":"8","/Users/imodrew/BooksterFrontend/src/components/Register.js":"9","/Users/imodrew/BooksterFrontend/src/components/Profile.js":"10","/Users/imodrew/BooksterFrontend/src/components/BookShelf.js":"11","/Users/imodrew/BooksterFrontend/src/components/Introduction.js":"12","/Users/imodrew/BooksterFrontend/src/theme.js":"13","/Users/imodrew/BooksterFrontend/src/components/HowItWorks.js":"14","/Users/imodrew/BooksterFrontend/src/components/BookCard.js":"15","/Users/imodrew/BooksterFrontend/src/components/Search.js":"16","/Users/imodrew/BooksterFrontend/src/components/InfoBar.js":"17","/Users/imodrew/BooksterFrontend/src/components/ChatInput.js":"18","/Users/imodrew/BooksterFrontend/src/components/ChatMessage.js":"19","/Users/imodrew/BooksterFrontend/src/components/ChatMessages.js":"20"},{"size":2258,"mtime":1607184021202,"results":"21","hashOfConfig":"22"},{"size":1397,"mtime":1607184021385,"results":"23","hashOfConfig":"22"},{"size":4104,"mtime":1607184021387,"results":"24","hashOfConfig":"22"},{"size":6215,"mtime":1607090696935,"results":"25","hashOfConfig":"22"},{"size":2266,"mtime":1607279322323,"results":"26","hashOfConfig":"22"},{"size":3864,"mtime":1607278850892,"results":"27","hashOfConfig":"22"},{"size":433,"mtime":1606819015571,"results":"28","hashOfConfig":"22"},{"size":728,"mtime":1606819015571,"results":"29","hashOfConfig":"22"},{"size":5998,"mtime":1606819015571,"results":"30","hashOfConfig":"22"},{"size":3025,"mtime":1607090696944,"results":"31","hashOfConfig":"22"},{"size":4997,"mtime":1607184021212,"results":"32","hashOfConfig":"22"},{"size":2570,"mtime":1607250487428,"results":"33","hashOfConfig":"22"},{"size":467,"mtime":1607090696945,"results":"34","hashOfConfig":"22"},{"size":3748,"mtime":1607184021386,"results":"35","hashOfConfig":"22"},{"size":3946,"mtime":1607184021211,"results":"36","hashOfConfig":"22"},{"size":4760,"mtime":1606826644449,"results":"37","hashOfConfig":"22"},{"size":1222,"mtime":1607253997019,"results":"38","hashOfConfig":"22"},{"size":2022,"mtime":1607255234230,"results":"39","hashOfConfig":"22"},{"size":2276,"mtime":1607278035941,"results":"40","hashOfConfig":"22"},{"size":581,"mtime":1607258705487,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"14hopn9",{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"45"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/imodrew/BooksterFrontend/src/App.js",["98","99","100","101","102"],"import React, {useState} from \"react\";\nimport { Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport './App.css';\nimport Cookies from \"js-cookie\";\n\nimport axios from \"axios\";\n\n\n// import components here\nimport LogIn from \"./components/LogIn\"\nimport Register from \"./components/Register\"\nimport Search from \"./components/Search\"\nimport Profile from \"./components/Profile\"\n\nimport BookCard from \"./components/BookCard\"\nimport BookShelf from \"./components/BookShelf\"\nimport ChatRoom from \"./components/ChatRoom\"\nimport Chat from \"./components/Chat\"\nimport { CssBaseline } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\n// axios.defaults.headers.common['Authorization'] = `Bearer ${Cookies.get('Bookster')}`\n\nconst useStyles = makeStyles((theme)=>({\n  root: {\n    minHeight: '100vh',\n    backgroundImage: 'https://images.unsplash.com/photo-1487147264018-f937fba0c817?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=334&q=80',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover'\n  }\n}))\n\n\n\n\n\n\n\nconst App = () => {\n \nconst classes = useStyles();\n \n \n \n \n \n \n  return (\n    <div className={classes.root}>\n     <CssBaseline>\n          <Switch> \n      \n              <Route path=\"/bookDetail\">\n                <BookCard />\n              </Route>\n\n              <Route path=\"/chat\">\n                <Chat />\n              </Route>\n              \n              <Route path=\"/chatroom\">\n                <ChatRoom />\n              </Route>\n\n\n              <Route path=\"/bookshelf\"\n                render={(props)=>(<BookShelf {...props}/>)}            \n              />\n              <Route path=\"/login\">\n                <LogIn />\n              </Route>\n              <Route path=\"/search\"\n                render={(props)=>(<Search {...props}/>)}            \n              /> \n              <Route path=\"/profile\">\n                <Profile />\n              </Route>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n              <Route exact path=\"/\">\n                <HomePage /> \n              </Route> \n           </Switch> \n           </CssBaseline>\n  </div>\n  );\n}\n\n\n\nexport default App;\n",["103","104"],"/Users/imodrew/BooksterFrontend/src/components/Footer.js",["105","106"],"/Users/imodrew/BooksterFrontend/src/components/NavBar.js",["107"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport {\n    AppBar,\n    Toolbar,\n    ListItem,\n    IconButton,\n    ListItemText,\n    ListItemIcon,\n    Divider,\n    List,\n    Typography,\n    Box\n} from \"@material-ui/core\"\nimport {   AssignmentInd, Home, Apps, ContactMail, SettingsInputAntenna } from \"@material-ui/icons\";\nimport BookIcon from '@material-ui/icons/Book';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\n\nimport \"../App.css\";\n// import a nice picture for the avatar\n\n\n\n\n\n\nconst useStyles = makeStyles(theme =>({\n    nav:{\n        /* backgroundColor: \"black\" */\n        background: 'none',\n        height: \"65px\",\n    },\n    backButton: {\n        backgroundColor: \"BE0D73\"\n    },\n    arrow: {\n        color: '#fcf3cf',\n    },\n    menuSliderContainer: {\n        width: 250,\n        height: \"40rem\",\n        backgroundColor: '#fcf3cf'\n        \n    },\n    avatar: {\n        display: \"block\",\n        margin: \"0.5rem\",\n        width: 190,\n        height: 230\n    },\n    lsText: {\n        color: \"#718680\",\n        fontFamily: \"'PT Sans', sans-serif\",\n    },\n    lsIcon: {\n        color: \"#718680\",\n        \n    },\n    avatar2: {\n        display: \"block\",\n        margin: \"0.5rem\",\n        width: 190,\n        height: 230\n    },\n    words:{\n        fontFamily: \"'Oswald', sans-serif\",\n        color: '#fcf3cf',\n    }\n}));\n\nconst menuItems = [\n    {\n        listIcon: <Home/>,\n        listText: \"Home\",\n        listPath: \"/\"\n    },\n    {\n        listIcon: <AssignmentInd/>,\n        listText: \"Log In\",\n        listPath: \"/login\"\n    },\n    {\n        listIcon: <Apps/>,\n        listText: \"Register\",\n        listPath: \"/register\"\n        \n    },\n    {\n        listIcon: <BookIcon/>,\n        listText:\"My Book Shelf\",\n        listPath:\"/bookshelf\"\n    },\n    {\n        listIcon: <FavoriteBorderIcon/>,\n        listText:\"All About the Employees\",\n        listPath:\"/about\"\n    },\n    {\n        listIcon: <ContactMail/>,\n        listText: \"Contact Us\",\n        listPath: \"/contact\"\n    },\n   \n    \n];\n\n\n\n\nconst NavBar = () =>{\nconst [slide, setSlide] =useState({\n    left: false\n});\n\nconst toggleSlider = (slider, open) => () => {\n    setSlide({...slide, [slider]: open})\n}\n\n\n\nconst classes = useStyles();\n\n\nconst slideList = slider => (\n    <Box component=\"div\" className={classes.menuSliderContainer} onClick={toggleSlider(slider, false)} style={{height: '100vh'}}>\n            {/* <Avatar className={classes.avatar2} src={newpic} alt=\"picture of ellesia\" variant=\"rounded\"/> */}\n            <Divider />\n            <List>\n            {menuItems.map((lsItem, key)=> (\n                    <ListItem button key={key} component={Link} to={lsItem.listPath}>\n                        <ListItemIcon className={classes.lsIcon}>\n                            {lsItem.listIcon}\n                        </ListItemIcon>\n                        <ListItemText className={classes.lsText} primary={lsItem.listText}/>\n                       \n                    </ListItem>\n            ))}   \n            </List>\n        </Box>\n)\n\n    return(\n    <>\n        \n        <Box component=\"nav\">\n            <AppBar  elevation={0} position=\"relative\" className={classes.nav}>\n                <Toolbar>\n                    <IconButton onClick={toggleSlider(\"left\", true)} className={classes.backButton}>\n                        <MenuIcon className={classes.arrow}/>\n                    </IconButton>\n                    <Typography color=\"white\"  variant=\"h5\" fontFamily=\"'Oswald', sans-serif\" className={classes.words}>\n                        Menu\n                    </Typography>\n                   \n                    <Drawer open={slide.left} anchor=\"right\" onClose={toggleSlider(\"left\", false)}>\n                        {slideList(\"left\")}\n                        {/* <Footer/> */}\n                    </Drawer>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    </>\n    )\n};\n\n\n\nexport default NavBar;","/Users/imodrew/BooksterFrontend/src/components/LogIn.js",["108","109","110","111","112"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\n\nimport Profile from \"./Profile\";\nimport { Redirect, Link, NavLink, useHistory } from \"react-router-dom\";\nimport BookShelf from \"./BookShelf\";\nimport Cookies from \"js-cookie\"\n\nconst InputField = withStyles({\n    root:{\n        \"& label.Mui-focused\":{\n            color: \"#DB5CA2\"\n        },\n        \"& label\":{\n            color: \"5CDB95\",\n            fontFamily:\"'Oswald', sans-serif\"\n        },\n        \"&:hover fieldSet\":{\n            borderColor: \"5CDB95\"\n        },\n        \"&.Mui-focused fieldSet\":{\n            borderColor: \"5CDB95\"\n        }\n    }\n})(TextField);\n\n\nconst useStyles = makeStyles(theme=>({\n    form:{\n        top:\"50%\",\n        left:\"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: \"absolute\"\n    },\n    button: {\n        marginTop: \"1rem\",\n        color: \"#C38D9E\",\n        borderColor: \"white\",\n        borderRadius: \"18px\",\n        fontFamily:\"'Oswald', sans-serif\"\n    },\n    header: {\n        textAlign: \"center\",\n        textTransform:\"uppercase\",\n        marginBottom:\"30px\",\n        fontFamily: \"font1\"\n    },\n    word: {\n        fontFamily:\"'Oswald', sans-serif\",\n        alignText: 'center'\n    }\n}))\n\n\n\n\nconst LogIn = ({props}) =>{\n\n\n\n    // const [auth, setAuth] = useState('');\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [loginData, setLoginData] = useState({\n        email: '',\n        password: ''\n    })\n\n    const [updatedUserInfo, setUpdatedUserInfo] = useState([]);\n\n    const [userInfo, setUserInfo] = useState(null)\n    // const [loggedIn, setLoggedIn] = useState(false)\n\n\n    \n\n\n    const handleLogin = (e) =>{\n        e.preventDefault();\n        \n    const postOptions = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({ loginData })\n    }\n        let token\n\n        fetch('http://localhost:3000/login', postOptions)\n        .then(\n            (response) => {\n                token = response.headers.get('x-secret-token')\n              if (response.ok) return response.json();\n              throw new Error(\"Network Error while fetching quote\");\n            },\n            (networkError) => {\n              console.log(networkError.message);\n            }\n          )\n          .then((data) => {\n            //   console.log(data)\n            Cookies.set('Bookster', token);\n            setUserInfo(data[0])\n            let myCookie = Cookies.get('Bookster');\n            console.log(myCookie)\n            // history.push('/search')\n            \n          })\n          .catch((e) => console.log(e.message));\n            /* .then((result)=> setUserInfo(result.rows[0]))\n            .catch(error=>console.log(error)) */\n            // .then(result=> console.log(result.rows[0]))\n            \n        }\n\n\n\n\nuseEffect(()=> {\n    if (userInfo){\n    const postOptions = {\n        method: 'POST',\n        headers: {'Authorization': `Bearer ${Cookies.get('Bookster')}`},\n        \n    }\n    \n    fetch('http://localhost:3000/login/me', postOptions)\n    .then(res=> res.json())\n    //what do we do from here?? i want to make an updated state with the info\n    // then push the person to their profile page\n    .then(data=>setUpdatedUserInfo(data))\n   \n    }\n    \n\n},[userInfo])\n    \n    \n\n    const handleChange = (e) =>{\n        setLoginData({...loginData, [e.target.name]: e.target.value })\n    }\n// need to add ONSUBMIT function \n\n    return (\n        <>\n            <Box component=\"div\" style={{background:\"#C38D9E\", height:\"100vh\"}}>\n                <Grid container justify=\"center\">\n                    <Box component=\"form\"  className={classes.form}>\n                        <Typography variant=\"h3\" className={classes.header}>\n                            Log In Below\n                        </Typography>\n                        <InputField \n                            label=\"Email\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"email\"\n                            value={loginData.email}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <InputField \n                            label=\"Password\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"password\"\n                            value={loginData.password}\n                            onChange={handleChange}\n                        />\n                        \n                        <Button type=\"submit\" onClick={handleLogin}  variant=\"contained\" fullWidth={true} className={classes.button} >\n                            Log In\n                        </Button>\n                        {userInfo ? \n                        <>\n                        <Typography className={classes.word}>Successful login! Review your profile below {userInfo.first_name}, or go to your Bookshelf </Typography> \n                        <Button   variant=\"contained\" fullWidth={true} className={classes.button} >\n                                Go to your bookshelf\n                            </Button>\n                        <Profile userInfo={userInfo}/>\n                        </>\n                        :<> \n                        <Typography className={classes.word}>You are not logged in! log in or register for an account</Typography>\n                            <Link to=\"/register\" style={{textDecoration: 'none'}}>\n                            <Button   variant=\"contained\" fullWidth={true} className={classes.button} >\n                                Register for Bookster Here!\n                            </Button>\n                            </Link>\n                           </> }    \n                        \n                        \n                      \n                    </Box>         \n                </Grid>\n           </Box>\n        </>\n    );\n}\n\n\n\n\nexport default LogIn;\n\n","/Users/imodrew/BooksterFrontend/src/components/ChatRoom.js",["113","114","115"],"/Users/imodrew/BooksterFrontend/src/components/Chat.js",["116","117"],"/Users/imodrew/BooksterFrontend/src/index.js",[],["118","119"],"/Users/imodrew/BooksterFrontend/src/pages/HomePage.js",["120"],"import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport Introduction from \"../components/Introduction\";\nimport HowItWorks from \"../components/HowItWorks\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\n// import components\nimport NavBar from \"../components/NavBar\"\nimport Footer from \"../components/Footer\"\n\n\nconst useStyles = makeStyles(theme => ({\n   \n    root: {\n        backgroundColor: 'white',\n        height: \"300px\"\n    }\n\n\n    }))\n\nconst HomePage = () => {\n\nconst classes = useStyles();\n    return(\n        <div className={classes.root}>\n            <NavBar />\n            <Introduction />\n            <HowItWorks />\n            <Footer />\n        </div>\n\n    )\n}\n\nexport default HomePage;",["121","122"],"/Users/imodrew/BooksterFrontend/src/components/Register.js",["123"],"import React, { useState, useEffect } from \"react\";\nimport '../App.css';\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\n\nconst InputField = withStyles({\n    root:{\n        \"& label.Mui-focused\":{\n            color: \"#DB5CA2\"\n        },\n        \"& label\":{\n            color: \"5CDB95\",\n            fontFamily:\"'Oswald', sans-serif\"\n        },\n        \"&:hover fieldSet\":{\n            borderColor: \"5CDB95\"\n        },\n        \"&.Mui-focused fieldSet\":{\n            borderColor: \"5CDB95\"\n        }\n    }\n})(TextField);\n\n\nconst useStyles = makeStyles(theme=>({\n    form:{\n        top:\"50%\",\n        left:\"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: \"absolute\"\n    },\n    button: {\n        marginTop: \"1rem\",\n        color: \"#C38D9E\",\n        borderColor: \"white\",\n        borderRadius: \"18px\",\n        fontFamily:\"'Oswald', sans-serif\"\n    },\n    header: {\n        textAlign: \"center\",\n        textTransform:\"uppercase\",\n        marginBottom:\"30px\",\n        fontFamily: \"font1\",\n    },\n    text: {\n        fontFamily: \"'Oswald', sans-serif\",\n        \n    },\n    word: {\n        fontFamily:\"'Oswald', sans-serif\"\n    }\n}))\n\n\n\n\n\n\n\n\nconst Register = () =>{\n    const classes = useStyles();\n    \n    \n    const [registerData, setRegisterData] = useState({\n        first_name: '',\n        surname: '',\n        email: '',\n        password: '',\n        bio: '',\n        fav_book: ''\n    });\n\nconst postOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({ registerData })\n}\n\n//or use registerData.field \n\n\n\n\nconst handleRegister = (e) =>{\n    e.preventDefault();\n    console.log(registerData)\n    fetch('http://localhost:3000/register', postOptions)\n        .then(response => response.json())\n        .then(data => console.log(data))     \n}\n\nconst handleChange = (e) =>{\n    setRegisterData({...registerData, [e.target.name]: e.target.value })\n    \n}\n\n// need to add ONSUBMIT function \n//add link to log in page\n\n    return (\n        <>\n            <Box component=\"div\" style={{background:\"#C38D9E\", height:\"100vh\"}} className={classes.text}>\n                <Grid container justify=\"center\">\n                    <Box component=\"form\"  className={classes.form}>\n                        <Typography variant=\"h3\" className={classes.header}>\n                            Register for Bookster\n                        </Typography>\n                        <InputField \n                            label=\"First Name\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"first_name\"\n                            className={classes.text}\n                            value={registerData.first_name}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <InputField \n                            label=\"Surname\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"surname\"\n                            value={registerData.surname}\n                            onChange={handleChange}\n                        />\n                         <br />\n                        <InputField \n                            label=\"Email\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"email\"\n                            value={registerData.email}\n                            onChange={handleChange}\n                        />\n                         <br />\n                        <InputField \n                            label=\"Password\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"password\"\n                            value={registerData.password}\n                            onChange={handleChange}\n                            type=\"password\"\n                        />\n                         <br />\n                       {/*  <InputField \n                            label=\"Picture\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"email\"\n                        />\n                        <br /> */}\n                        <InputField \n                            label=\"Short Bio About You\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"bio\"\n                            value={registerData.bio}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <InputField \n                            label=\"What are your favorite books?\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"fav_book\"\n                            value={registerData.fav_book}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <Button type=\"submit\" onClick={handleRegister} variant=\"contained\" fullWidth={true} className={classes.button} >\n                            Register\n                        </Button>\n                        <Typography alignContent=\"center\" className={classes.word}>\n                            Already a user? Sign in <a href=\"/login\">here</a>\n                        </Typography>\n                    </Box>\n                </Grid>\n           </Box>\n        </>\n    );\n}\n\n\n\n\nexport default Register;\n\n","/Users/imodrew/BooksterFrontend/src/components/Profile.js",["124","125","126","127"],"import React from \"react\";\nimport '../App.css';\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\n\nconst InputField = withStyles({\n    root:{\n        \"& label.Mui-focused\":{\n            color: \"#DB5CA2\"\n        },\n        \"& label\":{\n            color: \"5CDB95\",\n            fontFamily:\"'Oswald', sans-serif\"\n        },\n        \"&:hover fieldSet\":{\n            borderColor: \"5CDB95\"\n        },\n        \"&.Mui-focused fieldSet\":{\n            borderColor: \"5CDB95\"\n        }\n    }\n})(TextField);\n\n\nconst useStyles = makeStyles(theme=>({\n    form:{\n        top:\"50%\",\n        left:\"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: \"absolute\"\n    },\n    button: {\n        marginTop: \"1rem\",\n        color: \"#C38D9E\",\n        borderColor: \"white\",\n        borderRadius: \"18px\",\n        fontFamily:\"'Oswald', sans-serif\"\n    },\n    header: {\n        textAlign: \"center\",\n        textTransform:\"uppercase\",\n        marginBottom:\"30px\",\n        fontFamily: \"font1\",\n    },\n    text: {\n        fontFamily: \"'Oswald', sans-serif\",\n        \n    },\n    word: {\n        fontFamily:\"'Oswald', sans-serif\"\n    }\n}))\n\n\n\n\n\n\n\nconst Profile = ({userInfo}) =>{\n    const classes = useStyles();\n\n\n    return(\n        <>\n            <InputField \n                            label={userInfo.first_name}\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"first_name\"\n                            className={classes.text}\n            />\n            <br/>\n            <InputField \n                            label={userInfo.surname}\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"surname\"\n                            className={classes.text}\n            />\n            <br />\n            <InputField \n                            label={userInfo.email}\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"email\"\n                            className={classes.text}\n            />\n            <br />\n            <InputField \n                            label={userInfo.bio}\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"bio\"\n                            className={classes.text}\n            />\n            <br />\n            <InputField \n                            label={userInfo.fav_book}\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"fav_book\"\n                            className={classes.text}\n            />\n        </>\n    )\n}\n\n\n\nexport default Profile;",["128","129"],"/Users/imodrew/BooksterFrontend/src/components/BookShelf.js",["130","131","132"],"import React, {useState, useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport {  Typography, Grid, Box} from \"@material-ui/core\";\nimport { Card, CardMedia,  CardActionArea,  Button  } from \"@material-ui/core\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n// import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n//here add the fetch for getting the books by user from the data base and then display them\n\nconst useStyles = makeStyles(theme=>({\n    form:{\n        top:\"50%\",\n        left:\"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: \"absolute\"\n    },\n    button: {\n        marginTop: \"1rem\",\n        color: \"#C38D9E\",\n        borderColor: \"white\",\n        borderRadius: \"18px\",\n        fontFamily:\"'Oswald', sans-serif\"\n    },\n    header: {\n        textAlign: \"center\",\n        textTransform:\"uppercase\",\n        marginBottom:\"30px\",\n        fontFamily: \"font1\",\n        color: '#fcf3cf'\n    },\n    word: {\n        fontFamily:\"'Oswald', sans-serif\",\n        alignText: 'center',\n        textWrap: 'wrap',\n        fontWeight:'bold'\n    },\n    display: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        flexWrap: 'wrap',\n        width: '75%',\n        marginLeft: 'auto',\n        marginRight:'auto'\n    },\n    root: {\n        width: 200,\n        backgroundColor:'#fcf3cf'\n      },\n    media:{\n        height: 170\n    },\n    select: {\n        color: 'black',\n        fontWeight:'bold',\n        backgroundColor: '#718680'\n        \n    },\n    cat: {\n        display: 'flex',\n        justifyContent: 'space-around',\n        \n        alignContent: 'center'\n    }\n}))\n\n\n\n\n\n\nconst BookShelf = () =>{\n    const classes = useStyles();\n    const [myBooks, setMyBooks] = useState(null)\n    const [category, setCategory] = React.useState('');\n    const [open, setOpen] = React.useState(false);\n    const [selectedBook, setSelectedBook] = useState(false);\n\n  const handleChange = (event) => {\n    setCategory(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  }; \n\n  \n\nuseEffect(()=>{  \nfetch('http://localhost:3000/mybooks')\n.then(response=>{\n    if (response.ok) return response.json();\n    throw new Error (\"couldn't find your books\")\n},(networkError) => {\n    console.log(networkError.message);\n  })\n.then((data)=> setMyBooks(data))\n.catch((e) => console.log(e.message));\n\n}, [myBooks])\n\n\n\n    return (\n    <>\n    <Box component=\"div\" style={{background:\"#718680\", height:\"100vh\", paddingTop: '100px'}}>\n        <Grid container justify=\"center\">\n            <Typography variant=\"h3\" className={classes.header}>My Bookshelf</Typography>\n        </Grid>\n                <Box  className={classes.display}>\n                {myBooks && myBooks.map((book)=>{\n                return(\n                    \n                <Card className={classes.root} key={book.googleid} onClick={(e)=>setSelectedBook(book)}>\n                    <CardActionArea>\n                        <CardMedia\n                            className={classes.media}\n                            image={book.thumbnail}\n                        />\n                        <Typography gutterBottom variant=\"h6\">\n                            {book.title}\n                        </Typography>\n                        <Button className={classes.button} onClick={handleOpen}>\n                            Select a Category\n                        </Button>\n                <FormControl className={classes.formControl}>\n                            <Select   \n                                value={category}\n                                onChange={handleChange}\n                            >\n                                <MenuItem value={'Reading'}>Reading</MenuItem>\n                                <MenuItem value={'To Read'}>To Read</MenuItem>\n                                <MenuItem value={'Have Read'}>Have Read</MenuItem>\n                            </Select>\n                </FormControl>\n                    </CardActionArea>\n                </Card>\n              \n                )})}\n            </Box>\n            \n                    \n            <Box style={{background:\"#718680\", height: '10%'}}>\n            <p>You Selected Book: {selectedBook.title}</p>\n            <p>You Selected: {category}</p>\n            </Box>\n            <Box className={classes.cat} style={{background:\"#718680\", height:\"100vh\", paddingTop: '50px'}}>\n                <Typography variant=\"h3\" className={classes.header}>To Read</Typography>\n                <Typography variant=\"h3\" className={classes.header}>Reading</Typography>\n                <Typography variant=\"h3\" className={classes.header}>Have Read</Typography>\n            </Box>\n        </Box>\n        </>\n    )\n}\n\n\n\n\nexport default BookShelf;\n","/Users/imodrew/BooksterFrontend/src/components/Introduction.js",["133","134"],"import React from 'react';\nimport { Typography, Button, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport bookshelf from \"../Images/idealbookshelf.jpg\";\nimport image from '../Images/pngegg.png';\n\n\nconst useStyles = makeStyles(theme=>({\n    \n    position: {\n        display: 'flex',\n        paddingBottom:\"130px\",\n        paddingTop: '70px',\n        alignContent: 'center',\n        justifyContent: 'center'\n    },\n   \n    buttonPosition: {\n        display: 'flex',\n        justifyContent: 'center',\n        textAlign: 'center',\n        \n\n    },\n\n    button: {\n        fontFamily: \"'Oswald', sans-serif\",\n        fontWeight: 'bold',\n        paddingTop: '20px'\n    },\n    text: {\n        textAlign: 'center',\n        fontFamily: \"'PT Sans', sans-serif\",\n        color: 'black',\n        \n        },\n    header: {\n        textAlign: 'center',\n        fontFamily: \"'Abril Fatface', cursive\",\n        fontWeight: 'bold',\n        color: '#fcf3cf',\n        paddingBottom: '20px'\n\n    },\n    textAndButton: {\n        marginTop: '100px',\n        width: '600px',\n        color: '#fcf3cf'\n    },\n    quote: {\n        textAlign: 'center',\n        fontStyle: 'italic',\n        color: '#fcf3cf'\n    },\n    quoteBox: {\n        width: '75%',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        paddingBottom: '150px'\n    },\n    image: {\n       marginRight: '100px'\n\n    }\n}))\n\n\nconst Introduction = () => {\n\nconst classes = useStyles();\n\nreturn(\n<Box>\n<Box className={classes.position}>\n  \n<Box className={classes.textAndButton}>\n   \n    \n    <Box>\n        <Typography variant=\"h2\" className={classes.header}>Bookster.</Typography>\n        <Typography variant=\"h5\" className={classes.text}>\n        Create your own book club today and connect \n        <br />\n        with friends and make new ones from anywhere in the world!\n        </Typography>\n    </Box>\n   \n \n    <Box className={classes.buttonPosition}>\n        <NavLink to='/register'>\n            <Button className={classes.button} >\n            Sign up!\n            </Button>\n        </NavLink>\n     </Box>\n</Box>\n</Box>\n<Box className={classes.quoteBox}>\n<Typography variant=\"h6\" className={classes.quote}>\"I couldn't be happier with my experience with Bookster. The process is so simple, you just register, sign up and Bookster saves all your favorite books! You can even organize your bookshelf and chat with others regarding different genres.\" <br/> - Barak Obama</Typography>\n</Box>\n</Box>\n)\n}\n\nexport default Introduction;","/Users/imodrew/BooksterFrontend/src/theme.js",["135"],"\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport './App.css';\nconst font1 =  \"'Alfa Slab One', cursive\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#718680',\n    },\n    secondary: {\n      main: '#b2837a',\n    },\n    tertiary: {\n      main: '#fcf3cf'\n    }\n  },\n    typography: {\n      fontFamily: \"font1\",\n      },\n    listItemText: {\n        fontFamily:\"'Oswald', sans-serif\",\n     \n      }\n});\n\nexport default theme; ","/Users/imodrew/BooksterFrontend/src/components/HowItWorks.js",[],"/Users/imodrew/BooksterFrontend/src/components/BookCard.js",["136","137","138","139"],"import React, {useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core'\nimport { Card, CardMedia, CardContent, CardHeader, Button , Modal, Backdrop, Box } from \"@material-ui/core\";\nimport { useSpring, animated } from '@react-spring/web';\n\nconst useStyles = makeStyles((theme) => ({\n\tmodal: {\n\t  display: 'flex',\n\t  alignItems: 'center',\n\t  justifyContent: 'center',\n\t},\n\tpaper: {\n\t  backgroundColor: '#718680',\n\t  border: '2px solid #fcf3cf',\n\t//   boxShadow: theme.shadows[5],\n\t  padding: theme.spacing(2, 4, 3),\n\t  width: '400px'\n\t},\n\tbookDisplay: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tjustifyContnet: \"center\",\n\t\twidth: '150px'\n\t},\n\tbutton: {\n        marginTop: \"1rem\",\n        color: \"black\",\n        borderColor: \"white\",\n        borderRadius: \"18px\",\n\t\tfontFamily:\"'Oswald', sans-serif\",\n        backgroundColor: '#fcf3cf'\n\t},\n\tbookTitle: {\n\t\tcolor:'#fcf3cf',\n\t\tfontFamily: \"font1\",\n\t\ttextTransform: 'uppercase'\n\t},\n\tbookDescription: {\n\t\tfontFamily:\"'Oswald', sans-serif\",\n\t\tcolor:'#fcf3cf',\n\t},\n\tauthor: {\n\t\tfontFamily:\"'Oswald', sans-serif\",\n\t\tcolor:'#fcf3cf',\n\t}\n  }));\n  \n  const Fade = React.forwardRef(function Fade(props, ref) {\n\tconst { in: open, children, onEnter, onExited, ...other } = props;\n\tconst style = useSpring({\n\t  from: { opacity: 0 },\n\t  to: { opacity: open ? 1 : 0 },\n\t  onStart: () => {\n\t\tif (open && onEnter) {\n\t\t  onEnter();\n\t\t}\n\t  },\n\t  onRest: () => {\n\t\tif (!open && onExited) {\n\t\t  onExited();\n\t\t}\n\t  },\n\t});\n  \n\treturn (\n\t  <animated.div ref={ref} style={style} {...other}>\n\t\t{children}\n\t  </animated.div>\n\t);\n  });\n  \n  Fade.propTypes = {\n\tchildren: PropTypes.element,\n\tin: PropTypes.bool.isRequired,\n\tonEnter: PropTypes.func,\n\tonExited: PropTypes.func,\n  };\n\n\nconst BookCard = ({ book }) => {\n\t\n\t\n\n\n  \n\nconst handleAddBooks = (e) =>{\n\te.preventDefault();\n\n\tconst bookData = {\n\t\ttitle: book.volumeInfo.title,\n\t\tthumbnail: book.volumeInfo.imageLinks.thumbnail,\n\t\tsynopsis: book.volumeInfo.description,\n\t\tauthor: book.volumeInfo.authors[0],\n\t\tgoogleid: book.id\n\n\t}\n\t\n\tfetch('http://localhost:3000/books', {\n\t\tmethod: 'POST',\n\t\theaders: {'Content-Type': 'application/json'},\n\t\tbody: JSON.stringify({ bookData })\n\t})\n\t.then(response => response.json())\n\t.then(data => console.log(data))\n}\n\n    \nconst classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n\n\t\n\treturn(\t\t\n\t<div className={classes.bookGrid}>\n\t\t<Box className={classes.bookDisplay}>\n    \t\t<img src={book.volumeInfo.imageLinks.thumbnail} alt={book.title}/>\n      \t\t<Button type=\"button\" variant=\"contained\" onClick={handleOpen} className={classes.button}>\n        \t\tRead more\n      \t\t</Button>\n      \t\t<Button type=\"submit\"  variant=\"contained\" onClick={handleAddBooks} className={classes.button}>Save to MyBooks</Button>\n</Box>\n      <Modal\n        aria-labelledby=\"spring-modal-title\"\n        aria-describedby=\"spring-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n        <Card>\n          <div className={classes.paper}>\n              <Typography variant=\"h3\" className={classes.bookTitle}>{book.volumeInfo.title}</Typography>\n            <img src={book.volumeInfo.imageLinks.thumbnail} alt={book.title} width=\"250px\" className={classes.bookImage}/>\n            <p className={classes.author} alignText='center'>By {book.volumeInfo.authors}</p>\n            <br />\n            <Typography variant=\"p\" className={classes.bookDescription}>{book.volumeInfo.description}</Typography>\n          </div>\n        </Card>\n        </Fade>\n      </Modal>\n\t</div>  \n\n  );\n}\n\n\nexport default BookCard;\n\n","/Users/imodrew/BooksterFrontend/src/components/Search.js",["140"],"import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\n\n\nimport BookCard from \"./BookCard\"\n\n\nimport { NavLink } from \"react-router-dom\";\n\nimport axios from \"axios\";\n// import BookShelf from \"./BookShelf\";\n\n\nconst InputField = withStyles({\n    root:{\n        \"& label.Mui-focused\":{\n            color: \"#DB5CA2\"\n        },\n        \"& label\":{\n            color: \"5CDB95\",\n            fontFamily: \"'Oswald', sans-serif\"\n        },\n        \"&:hover fieldSet\":{\n            borderColor: \"5CDB95\"\n        },\n        \"&.Mui-focused fieldSet\":{\n            borderColor: \"5CDB95\"\n        }\n    }\n})(TextField);\n\n\nconst useStyles = makeStyles(theme=>({\n    form:{\n        top:\"50%\",\n        left:\"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: \"absolute\"\n    },\n    button: {\n        marginTop: \"1rem\",\n        color: \"black\",\n        borderColor: \"white\",\n        borderRadius: \"18px\",\n        fontFamily:\"'Oswald', sans-serif\",\n        backgroundColor: '#fcf3cf'\n       \n        \n    },\n    header: {\n        textAlign: \"center\",\n        textTransform:\"uppercase\",\n        marginBottom:\"30px\",\n        fontFamily:\"font1\",\n        color:\"#fcf3cf\"\n    },\n    text:{\n        fontFamily: \"'Oswald', sans-serif\",\n        textAlign: \"center\",\n        // color:\"#fcd392\"\n    },\n    link:{\n        textDecoration: \"none\"\n    },\n    flex: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        padding: '10px',\n        alignContent: 'space-around',\n        justifyContent:'space-around',\n        backgroundColor:'#718680'\n    },\n    divs: {\n        border: '1px solid black',\n        padding: '5px',\n        margin: '5px'\n\n    },\n    buttonBox: {\n        width:'150px',\n        display:'block',\n        marginLeft: 'auto',\n        marginRight:'auto'\n    }\n}))\n\n\n\n\n\n\n\n\n\nconst Search = ({props}) =>{\n\nconst classes = useStyles();\n// const history = useHistory();\n\nconst [query, setQuery] = useState('');\nconst [results, setResults] =useState(null)\n// const [book, setBook] =useState([]);\n\nconst handleSearch = (e) =>{\n    setQuery(e.target.value)\n    // console.log(query)\n}\n\nconst handleSubmit = (e) =>{\n    e.preventDefault();\n \n    axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=18&startIndex=1&key=AIzaSyDXXOp7xMvzIDXxTNqgD3oqjh8o5ZlHXMw`)\n    \n    .then(data =>{\n        setResults(data.data.items)\n        /* console.log(data.data.items) */\n    })\n    .catch(err=>{\n        console.log(err.res)\n    }) \n}\n\n\n\n    return(\n        <>\n        <Box>\n            <Box component=\"div\" style={{background:\"#718680\", height:\"100vh\"}}>\n                <Grid container justify=\"center\">\n                    <Box component=\"form\"  onSubmit={handleSubmit} className={classes.form}>\n                        <Typography variant=\"h3\" className={classes.header}>\n                            What Book Are You Looking For?\n                        </Typography>\n                        <Typography variant=\"h6\" className={classes.text}>\n                            You can search for a book based on title or author\n                        </Typography>\n                        <InputField \n                            label=\"search for a book\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"book\"\n                            value={query}\n                            onChange={handleSearch}\n                            type=\"text\"\n                            autoComplete=\"off\"\n                        />\n                        <br />\n                        <Box className={classes.buttonBox}>\n                            <Button type=\"submit\" onSubmit={handleSubmit}  variant=\"contained\"  fullWidth={true} className={classes.button} >\n                                Search\n                            </Button>\n                            <NavLink to=\"/bookshelf\" className={classes.link}>\n                                <Button  variant=\"contained\"  fullWidth={true} className={classes.button} >\n                                Go To My Bookshelf\n                            </Button>\n                            </NavLink>\n                        </Box>\n                    </Box> \n                   \n                </Grid>\n\n        \n           </Box>\n\n           <Box className={classes.flex}>\n           {results && results.map((book) => {\n               console.log(book)\n               \n               return (\n            <BookCard book={book} />\n           )})}\n           </Box>\n    </Box>\n    </>\n  )\n}\n\n\n\n\nexport default Search;","/Users/imodrew/BooksterFrontend/src/components/InfoBar.js",["141"],"/Users/imodrew/BooksterFrontend/src/components/ChatInput.js",["142"],"import React from 'react';\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\nimport { TextField, Button, Box } from '@material-ui/core';\n\n// const InputField = withStyles({\n//     root:{\n//         \"& label.Mui-focused\":{\n//             color: \"#DB5CA2\"\n//         },\n//         \"& label\":{\n//             color: \"5CDB95\",\n//             fontFamily:\"'Oswald', sans-serif\"\n//         },\n//         \"&:hover fieldSet\":{\n//             borderColor: \"5CDB95\"\n//         },\n//         \"&.Mui-focused fieldSet\":{\n//             borderColor: \"5CDB95\"\n//         }\n//     }\n//   })(TextField);\n\n  const useStyles = makeStyles(theme=>({\n\n    heading: {\n      alignText: 'center',\n     fontFamily:\"'Oswald', sans-serif\"\n \n    },\n    button: {\n        marginTop: \"1rem\",\n        color: \"#C38D9E\",\n        borderColor: \"white\",\n        borderRadius: \"18px\",\n        fontFamily:\"'Oswald', sans-serif\",\n        textTransform: \"uppercase\",\n        textDecoration: \"none\",\n        background: \"#fcf3cf\",\n        padding: \"20px\",\n        display: \"inline-block\",\n        border: \"none\",\n        width: \"20%\"\n    },\n    textArea: {\n        border: '2px',\n    },\n    pageColor: {\n        backgroundColor: '#718680'\n    },\n    form: {\n      display: \"flex\",\n      borderTop: \"2px solid\",\n\n    },\n    input: {\n      border: \"none\",\n      borderRadius: \"0\",\n      padding: \"5%\",\n      width: \"80%\",\n      fontSize: \"1.2em\"\n\n    }\n\n  }));\n\n\nconst Input = ({ setMessage, sendMessage, message }) => {\n\n    const classes = useStyles();\n\nreturn(\n<Box className={classes.pageColor}>\n  <form className={classes.form}>\n  <Box>\n    <TextField\n      className={classes.input}\n      type=\"text\"\n      placeholder=\"Type a message...\"\n      value={message}\n      onChange={({ target: { value } }) => setMessage(value)}\n      onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\n    />\n    </Box>\n    <Button className={classes.button} onClick={e => sendMessage(e)}>Send</Button>\n  </form>\n</Box>\n)\n}\n\nexport default Input;","/Users/imodrew/BooksterFrontend/src/components/ChatMessage.js",["143","144"],"/Users/imodrew/BooksterFrontend/src/components/ChatMessages.js",[],{"ruleId":"145","severity":1,"message":"146","line":1,"column":16,"nodeType":"147","messageId":"148","endLine":1,"endColumn":24},{"ruleId":"145","severity":1,"message":"149","line":2,"column":25,"nodeType":"147","messageId":"148","endLine":2,"endColumn":29},{"ruleId":"145","severity":1,"message":"150","line":2,"column":31,"nodeType":"147","messageId":"148","endLine":2,"endColumn":39},{"ruleId":"145","severity":1,"message":"151","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":15},{"ruleId":"145","severity":1,"message":"152","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":13},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"145","severity":1,"message":"149","line":5,"column":52,"nodeType":"147","messageId":"148","endLine":5,"endColumn":56},{"ruleId":"145","severity":1,"message":"157","line":5,"column":58,"nodeType":"147","messageId":"148","endLine":5,"endColumn":61},{"ruleId":"145","severity":1,"message":"158","line":17,"column":52,"nodeType":"147","messageId":"148","endLine":17,"endColumn":72},{"ruleId":"145","severity":1,"message":"150","line":6,"column":10,"nodeType":"147","messageId":"148","endLine":6,"endColumn":18},{"ruleId":"145","severity":1,"message":"159","line":6,"column":26,"nodeType":"147","messageId":"148","endLine":6,"endColumn":33},{"ruleId":"145","severity":1,"message":"160","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":17},{"ruleId":"145","severity":1,"message":"161","line":64,"column":11,"nodeType":"147","messageId":"148","endLine":64,"endColumn":18},{"ruleId":"145","severity":1,"message":"162","line":71,"column":12,"nodeType":"147","messageId":"148","endLine":71,"endColumn":27},{"ruleId":"145","severity":1,"message":"163","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":12},{"ruleId":"145","severity":1,"message":"164","line":4,"column":21,"nodeType":"147","messageId":"148","endLine":4,"endColumn":31},{"ruleId":"145","severity":1,"message":"165","line":4,"column":41,"nodeType":"147","messageId":"148","endLine":4,"endColumn":45},{"ruleId":"145","severity":1,"message":"166","line":8,"column":22,"nodeType":"147","messageId":"148","endLine":8,"endColumn":32},{"ruleId":"167","severity":1,"message":"168","line":126,"column":8,"nodeType":"169","endLine":126,"endColumn":25,"suggestions":"170"},{"ruleId":"153","replacedBy":"171"},{"ruleId":"155","replacedBy":"172"},{"ruleId":"145","severity":1,"message":"157","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"153","replacedBy":"173"},{"ruleId":"155","replacedBy":"174"},{"ruleId":"145","severity":1,"message":"175","line":1,"column":27,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"164","line":3,"column":21,"nodeType":"147","messageId":"148","endLine":3,"endColumn":31},{"ruleId":"145","severity":1,"message":"176","line":3,"column":33,"nodeType":"147","messageId":"148","endLine":3,"endColumn":39},{"ruleId":"145","severity":1,"message":"165","line":3,"column":41,"nodeType":"147","messageId":"148","endLine":3,"endColumn":45},{"ruleId":"145","severity":1,"message":"157","line":3,"column":47,"nodeType":"147","messageId":"148","endLine":3,"endColumn":50},{"ruleId":"153","replacedBy":"177"},{"ruleId":"155","replacedBy":"178"},{"ruleId":"145","severity":1,"message":"179","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":18},{"ruleId":"145","severity":1,"message":"180","line":79,"column":12,"nodeType":"147","messageId":"148","endLine":79,"endColumn":16},{"ruleId":"145","severity":1,"message":"181","line":86,"column":9,"nodeType":"147","messageId":"148","endLine":86,"endColumn":20},{"ruleId":"145","severity":1,"message":"182","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":17},{"ruleId":"145","severity":1,"message":"183","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":13},{"ruleId":"145","severity":1,"message":"184","line":4,"column":7,"nodeType":"147","messageId":"148","endLine":4,"endColumn":12},{"ruleId":"145","severity":1,"message":"146","line":1,"column":16,"nodeType":"147","messageId":"148","endLine":1,"endColumn":24},{"ruleId":"145","severity":1,"message":"185","line":5,"column":16,"nodeType":"147","messageId":"148","endLine":5,"endColumn":25},{"ruleId":"145","severity":1,"message":"186","line":5,"column":27,"nodeType":"147","messageId":"148","endLine":5,"endColumn":38},{"ruleId":"145","severity":1,"message":"187","line":5,"column":40,"nodeType":"147","messageId":"148","endLine":5,"endColumn":50},{"ruleId":"145","severity":1,"message":"149","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"166","line":2,"column":22,"nodeType":"147","messageId":"148","endLine":2,"endColumn":32},{"ruleId":"145","severity":1,"message":"166","line":2,"column":22,"nodeType":"147","messageId":"148","endLine":2,"endColumn":32},{"ruleId":"145","severity":1,"message":"176","line":2,"column":22,"nodeType":"147","messageId":"148","endLine":2,"endColumn":28},{"ruleId":"188","severity":1,"message":"189","line":28,"column":3,"nodeType":"190","messageId":"191","endLine":28,"endColumn":14},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Redirect' is defined but never used.","'Cookies' is defined but never used.","'axios' is defined but never used.","no-native-reassign",["192"],"no-negated-in-lhs",["193"],"'Box' is defined but never used.","'SettingsInputAntenna' is defined but never used.","'NavLink' is defined but never used.","'BookShelf' is defined but never used.","'history' is assigned a value but never used.","'updatedUserInfo' is assigned a value but never used.","'Chat' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'withStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["194"],["192"],["193"],["192"],["193"],"'useEffect' is defined but never used.","'Button' is defined but never used.",["192"],["193"],"'InputLabel' is defined but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'bookshelf' is defined but never used.","'image' is defined but never used.","'font1' is assigned a value but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","no-dupe-keys","Duplicate key 'messageText'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},"Update the dependencies array to be: [messages, socket, users]",{"range":"197","text":"198"},[2935,2952],"[messages, socket, users]"]