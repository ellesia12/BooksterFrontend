[{"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\theme.js":"1","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookShelf.js":"2","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Search.js":"3","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\NavBar.js":"4","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\LogIn.js":"5","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatMessage.js":"6","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookCard.js":"7","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Introduction.js":"8","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Footer.js":"9","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\HowItWorks.js":"10","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\App.js":"11","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\pages\\HomePage.js":"12","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatMessages.js":"13","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatInput.js":"14"},{"size":610,"mtime":1607105967192,"results":"15","hashOfConfig":"16"},{"size":5164,"mtime":1607093371342,"results":"17","hashOfConfig":"16"},{"size":4944,"mtime":1606827424178,"results":"18","hashOfConfig":"16"},{"size":4274,"mtime":1607105307725,"results":"19","hashOfConfig":"16"},{"size":6422,"mtime":1607090432693,"results":"20","hashOfConfig":"16"},{"size":988,"mtime":1607090687153,"results":"21","hashOfConfig":"16"},{"size":4111,"mtime":1607092561617,"results":"22","hashOfConfig":"16"},{"size":2538,"mtime":1607104388254,"results":"23","hashOfConfig":"16"},{"size":1449,"mtime":1607104899852,"results":"24","hashOfConfig":"16"},{"size":3867,"mtime":1607106437816,"results":"25","hashOfConfig":"16"},{"size":2351,"mtime":1607101036312,"results":"26","hashOfConfig":"16"},{"size":846,"mtime":1607103802766,"results":"27","hashOfConfig":"16"},{"size":363,"mtime":1607090687154,"results":"28","hashOfConfig":"16"},{"size":505,"mtime":1607090687152,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"st8waw",{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\theme.js",["63","64"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookShelf.js",["65","66","67"],"import React, {useState, useEffect} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport {  Typography, Grid, Box} from \"@material-ui/core\";\r\nimport { Card, CardMedia,  CardActionArea,  Button  } from \"@material-ui/core\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n// import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n//here add the fetch for getting the books by user from the data base and then display them\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    form:{\r\n        top:\"50%\",\r\n        left:\"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        position: \"absolute\"\r\n    },\r\n    button: {\r\n        marginTop: \"1rem\",\r\n        color: \"#C38D9E\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n        fontFamily:\"'Oswald', sans-serif\"\r\n    },\r\n    header: {\r\n        textAlign: \"center\",\r\n        textTransform:\"uppercase\",\r\n        marginBottom:\"30px\",\r\n        fontFamily: \"font1\",\r\n        color: '#fcf3cf'\r\n    },\r\n    word: {\r\n        fontFamily:\"'Oswald', sans-serif\",\r\n        alignText: 'center',\r\n        textWrap: 'wrap',\r\n        fontWeight:'bold'\r\n    },\r\n    display: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap',\r\n        width: '75%',\r\n        marginLeft: 'auto',\r\n        marginRight:'auto'\r\n    },\r\n    root: {\r\n        width: 200,\r\n        backgroundColor:'#fcf3cf'\r\n      },\r\n    media:{\r\n        height: 170\r\n    },\r\n    select: {\r\n        color: 'black',\r\n        fontWeight:'bold',\r\n        backgroundColor: '#718680'\r\n        \r\n    },\r\n    cat: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        \r\n        alignContent: 'center'\r\n    }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst BookShelf = () =>{\r\n    const classes = useStyles();\r\n    const [myBooks, setMyBooks] = useState(null)\r\n    const [category, setCategory] = React.useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedBook, setSelectedBook] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }; \r\n\r\n  \r\n\r\nuseEffect(()=>{  \r\nfetch('http://localhost:3000/mybooks')\r\n.then(response=>{\r\n    if (response.ok) return response.json();\r\n    throw new Error (\"couldn't find your books\")\r\n},(networkError) => {\r\n    console.log(networkError.message);\r\n  })\r\n.then((data)=> setMyBooks(data))\r\n.catch((e) => console.log(e.message));\r\n\r\n}, [myBooks])\r\n\r\n\r\n\r\n    return (\r\n    <>\r\n    <Box component=\"div\" style={{background:\"#718680\", height:\"100vh\", paddingTop: '100px'}}>\r\n        <Grid container justify=\"center\">\r\n            <Typography variant=\"h3\" className={classes.header}>My Bookshelf</Typography>\r\n        </Grid>\r\n                <Box  className={classes.display}>\r\n                {myBooks && myBooks.map((book)=>{\r\n                return(\r\n                    \r\n                <Card className={classes.root} key={book.googleid} onClick={(e)=>setSelectedBook(book)}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={book.thumbnail}\r\n                        />\r\n                        <Typography gutterBottom variant=\"h6\">\r\n                            {book.title}\r\n                        </Typography>\r\n                        <Button className={classes.button} onClick={handleOpen}>\r\n                            Select a Category\r\n                        </Button>\r\n                <FormControl className={classes.formControl}>\r\n                            <Select   \r\n                                value={category}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <MenuItem value={'Reading'}>Reading</MenuItem>\r\n                                <MenuItem value={'To Read'}>To Read</MenuItem>\r\n                                <MenuItem value={'Have Read'}>Have Read</MenuItem>\r\n                            </Select>\r\n                </FormControl>\r\n                    </CardActionArea>\r\n                </Card>\r\n              \r\n                )})}\r\n            </Box>\r\n            \r\n                    \r\n            <Box style={{background:\"#718680\", height: '10%'}}>\r\n            <p>You Selected Book: {selectedBook.title}</p>\r\n            <p>You Selected: {category}</p>\r\n            </Box>\r\n            <Box className={classes.cat} style={{background:\"#718680\", height:\"100vh\", paddingTop: '50px'}}>\r\n                <Typography variant=\"h3\" className={classes.header}>To Read</Typography>\r\n                <Typography variant=\"h3\" className={classes.header}>Reading</Typography>\r\n                <Typography variant=\"h3\" className={classes.header}>Have Read</Typography>\r\n            </Box>\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default BookShelf;\r\n",["68","69"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Search.js",["70"],"import React, {useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\r\n\r\n\r\nimport BookCard from \"./BookCard\"\r\n\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n// import BookShelf from \"./BookShelf\";\r\n\r\n\r\nconst InputField = withStyles({\r\n    root:{\r\n        \"& label.Mui-focused\":{\r\n            color: \"#DB5CA2\"\r\n        },\r\n        \"& label\":{\r\n            color: \"5CDB95\",\r\n            fontFamily: \"'Oswald', sans-serif\"\r\n        },\r\n        \"&:hover fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        },\r\n        \"&.Mui-focused fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        }\r\n    }\r\n})(TextField);\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    form:{\r\n        top:\"50%\",\r\n        left:\"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        position: \"absolute\"\r\n    },\r\n    button: {\r\n        marginTop: \"1rem\",\r\n        color: \"black\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n        fontFamily:\"'Oswald', sans-serif\",\r\n        backgroundColor: '#fcf3cf'\r\n       \r\n        \r\n    },\r\n    header: {\r\n        textAlign: \"center\",\r\n        textTransform:\"uppercase\",\r\n        marginBottom:\"30px\",\r\n        fontFamily:\"font1\",\r\n        color:\"#fcf3cf\"\r\n    },\r\n    text:{\r\n        fontFamily: \"'Oswald', sans-serif\",\r\n        textAlign: \"center\",\r\n        // color:\"#fcd392\"\r\n    },\r\n    link:{\r\n        textDecoration: \"none\"\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        padding: '10px',\r\n        alignContent: 'space-around',\r\n        justifyContent:'space-around',\r\n        backgroundColor:'#718680'\r\n    },\r\n    divs: {\r\n        border: '1px solid black',\r\n        padding: '5px',\r\n        margin: '5px'\r\n\r\n    },\r\n    buttonBox: {\r\n        width:'150px',\r\n        display:'block',\r\n        marginLeft: 'auto',\r\n        marginRight:'auto'\r\n    }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Search = ({props}) =>{\r\n\r\nconst classes = useStyles();\r\n// const history = useHistory();\r\n\r\nconst [query, setQuery] = useState('');\r\nconst [results, setResults] =useState(null)\r\n// const [book, setBook] =useState([]);\r\n\r\nconst handleSearch = (e) =>{\r\n    setQuery(e.target.value)\r\n    // console.log(query)\r\n}\r\n\r\nconst handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n \r\n    axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=18&startIndex=1&key=AIzaSyDXXOp7xMvzIDXxTNqgD3oqjh8o5ZlHXMw`)\r\n    \r\n    .then(data =>{\r\n        setResults(data.data.items)\r\n        /* console.log(data.data.items) */\r\n    })\r\n    .catch(err=>{\r\n        console.log(err.res)\r\n    }) \r\n}\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <Box>\r\n            <Box component=\"div\" style={{background:\"#718680\", height:\"100vh\"}}>\r\n                <Grid container justify=\"center\">\r\n                    <Box component=\"form\"  onSubmit={handleSubmit} className={classes.form}>\r\n                        <Typography variant=\"h3\" className={classes.header}>\r\n                            What Book Are You Looking For?\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" className={classes.text}>\r\n                            You can search for a book based on title or author\r\n                        </Typography>\r\n                        <InputField \r\n                            label=\"search for a book\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"book\"\r\n                            value={query}\r\n                            onChange={handleSearch}\r\n                            type=\"text\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <br />\r\n                        <Box className={classes.buttonBox}>\r\n                            <Button type=\"submit\" onSubmit={handleSubmit}  variant=\"contained\"  fullWidth={true} className={classes.button} >\r\n                                Search\r\n                            </Button>\r\n                            <NavLink to=\"/bookshelf\" className={classes.link}>\r\n                                <Button  variant=\"contained\"  fullWidth={true} className={classes.button} >\r\n                                Go To My Bookshelf\r\n                            </Button>\r\n                            </NavLink>\r\n                        </Box>\r\n                    </Box> \r\n                   \r\n                </Grid>\r\n\r\n        \r\n           </Box>\r\n\r\n           <Box className={classes.flex}>\r\n           {results && results.map((book) => {\r\n               console.log(book)\r\n               \r\n               return (\r\n            <BookCard book={book} />\r\n           )})}\r\n           </Box>\r\n    </Box>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Search;","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\NavBar.js",["71"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\LogIn.js",["72","73","74","75","76"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\r\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\r\n\r\nimport Profile from \"./Profile\";\r\nimport { Redirect, Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport BookShelf from \"./BookShelf\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nconst InputField = withStyles({\r\n    root:{\r\n        \"& label.Mui-focused\":{\r\n            color: \"#DB5CA2\"\r\n        },\r\n        \"& label\":{\r\n            color: \"5CDB95\",\r\n            fontFamily:\"'Oswald', sans-serif\"\r\n        },\r\n        \"&:hover fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        },\r\n        \"&.Mui-focused fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        }\r\n    }\r\n})(TextField);\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    form:{\r\n        top:\"50%\",\r\n        left:\"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        position: \"absolute\"\r\n    },\r\n    button: {\r\n        marginTop: \"1rem\",\r\n        color: \"#C38D9E\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n        fontFamily:\"'Oswald', sans-serif\"\r\n    },\r\n    header: {\r\n        textAlign: \"center\",\r\n        textTransform:\"uppercase\",\r\n        marginBottom:\"30px\",\r\n        fontFamily: \"font1\"\r\n    },\r\n    word: {\r\n        fontFamily:\"'Oswald', sans-serif\",\r\n        alignText: 'center'\r\n    }\r\n}))\r\n\r\n\r\n\r\n\r\nconst LogIn = ({props}) =>{\r\n\r\n\r\n\r\n    // const [auth, setAuth] = useState('');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [loginData, setLoginData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const [updatedUserInfo, setUpdatedUserInfo] = useState([]);\r\n\r\n    const [userInfo, setUserInfo] = useState(null)\r\n    // const [loggedIn, setLoggedIn] = useState(false)\r\n\r\n\r\n    \r\n\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        \r\n    const postOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({ loginData })\r\n    }\r\n        let token\r\n\r\n        fetch('http://localhost:3000/login', postOptions)\r\n        .then(\r\n            (response) => {\r\n                token = response.headers.get('x-secret-token')\r\n              if (response.ok) return response.json();\r\n              throw new Error(\"Network Error while fetching quote\");\r\n            },\r\n            (networkError) => {\r\n              console.log(networkError.message);\r\n            }\r\n          )\r\n          .then((data) => {\r\n            //   console.log(data)\r\n            Cookies.set('Bookster', token);\r\n            setUserInfo(data[0])\r\n            let myCookie = Cookies.get('Bookster');\r\n            console.log(myCookie)\r\n            // history.push('/search')\r\n            \r\n          })\r\n          .catch((e) => console.log(e.message));\r\n            /* .then((result)=> setUserInfo(result.rows[0]))\r\n            .catch(error=>console.log(error)) */\r\n            // .then(result=> console.log(result.rows[0]))\r\n            \r\n        }\r\n\r\n\r\n\r\n\r\nuseEffect(()=> {\r\n    if (userInfo){\r\n    const postOptions = {\r\n        method: 'POST',\r\n        headers: {'Authorization': `Bearer ${Cookies.get('Bookster')}`},\r\n        \r\n    }\r\n    \r\n    fetch('http://localhost:3000/login/me', postOptions)\r\n    .then(res=> res.json())\r\n    //what do we do from here?? i want to make an updated state with the info\r\n    // then push the person to their profile page\r\n    .then(data=>setUpdatedUserInfo(data))\r\n   \r\n    }\r\n    \r\n\r\n},[userInfo])\r\n    \r\n    \r\n\r\n    const handleChange = (e) =>{\r\n        setLoginData({...loginData, [e.target.name]: e.target.value })\r\n    }\r\n// need to add ONSUBMIT function \r\n\r\n    return (\r\n        <>\r\n            <Box component=\"div\" style={{background:\"#C38D9E\", height:\"100vh\"}}>\r\n                <Grid container justify=\"center\">\r\n                    <Box component=\"form\"  className={classes.form}>\r\n                        <Typography variant=\"h3\" className={classes.header}>\r\n                            Log In Below\r\n                        </Typography>\r\n                        <InputField \r\n                            label=\"Email\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"email\"\r\n                            value={loginData.email}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <br />\r\n                        <InputField \r\n                            label=\"Password\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"password\"\r\n                            value={loginData.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                        \r\n                        <Button type=\"submit\" onClick={handleLogin}  variant=\"contained\" fullWidth={true} className={classes.button} >\r\n                            Log In\r\n                        </Button>\r\n                        {userInfo ? \r\n                        <>\r\n                        <Typography className={classes.word}>Successful login! Review your profile below {userInfo.first_name}, or go to your Bookshelf </Typography> \r\n                        <Button   variant=\"contained\" fullWidth={true} className={classes.button} >\r\n                                Go to your bookshelf\r\n                            </Button>\r\n                        <Profile userInfo={userInfo}/>\r\n                        </>\r\n                        :<> \r\n                        <Typography className={classes.word}>You are not logged in! log in or register for an account</Typography>\r\n                            <Link to=\"/register\" style={{textDecoration: 'none'}}>\r\n                            <Button   variant=\"contained\" fullWidth={true} className={classes.button} >\r\n                                Register for Bookster Here!\r\n                            </Button>\r\n                            </Link>\r\n                           </> }    \r\n                        \r\n                        \r\n                      \r\n                    </Box>         \r\n                </Grid>\r\n           </Box>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default LogIn;\r\n\r\n",["77","78"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatMessage.js",[],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookCard.js",["79","80","81","82"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Introduction.js",["83"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Footer.js",["84","85"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\HowItWorks.js",[],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\App.js",["86","87","88","89","90"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\pages\\HomePage.js",["91"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatMessages.js",[],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatInput.js",[],{"ruleId":"92","severity":1,"message":"93","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":17},{"ruleId":"92","severity":1,"message":"96","line":6,"column":7,"nodeType":"94","messageId":"95","endLine":6,"endColumn":12},{"ruleId":"92","severity":1,"message":"97","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":18},{"ruleId":"92","severity":1,"message":"98","line":79,"column":12,"nodeType":"94","messageId":"95","endLine":79,"endColumn":16},{"ruleId":"92","severity":1,"message":"99","line":86,"column":9,"nodeType":"94","messageId":"95","endLine":86,"endColumn":20},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"92","severity":1,"message":"104","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":14},{"ruleId":"92","severity":1,"message":"105","line":17,"column":52,"nodeType":"94","messageId":"95","endLine":17,"endColumn":72},{"ruleId":"92","severity":1,"message":"106","line":6,"column":10,"nodeType":"94","messageId":"95","endLine":6,"endColumn":18},{"ruleId":"92","severity":1,"message":"107","line":6,"column":26,"nodeType":"94","messageId":"95","endLine":6,"endColumn":33},{"ruleId":"92","severity":1,"message":"108","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":17},{"ruleId":"92","severity":1,"message":"109","line":64,"column":11,"nodeType":"94","messageId":"95","endLine":64,"endColumn":18},{"ruleId":"92","severity":1,"message":"110","line":71,"column":12,"nodeType":"94","messageId":"95","endLine":71,"endColumn":27},{"ruleId":"100","replacedBy":"111"},{"ruleId":"102","replacedBy":"112"},{"ruleId":"92","severity":1,"message":"113","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":24},{"ruleId":"92","severity":1,"message":"114","line":5,"column":16,"nodeType":"94","messageId":"95","endLine":5,"endColumn":25},{"ruleId":"92","severity":1,"message":"115","line":5,"column":27,"nodeType":"94","messageId":"95","endLine":5,"endColumn":38},{"ruleId":"92","severity":1,"message":"116","line":5,"column":40,"nodeType":"94","messageId":"95","endLine":5,"endColumn":50},{"ruleId":"92","severity":1,"message":"117","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":17},{"ruleId":"92","severity":1,"message":"104","line":5,"column":52,"nodeType":"94","messageId":"95","endLine":5,"endColumn":56},{"ruleId":"92","severity":1,"message":"118","line":5,"column":58,"nodeType":"94","messageId":"95","endLine":5,"endColumn":61},{"ruleId":"92","severity":1,"message":"113","line":1,"column":16,"nodeType":"94","messageId":"95","endLine":1,"endColumn":24},{"ruleId":"92","severity":1,"message":"104","line":2,"column":25,"nodeType":"94","messageId":"95","endLine":2,"endColumn":29},{"ruleId":"92","severity":1,"message":"106","line":2,"column":31,"nodeType":"94","messageId":"95","endLine":2,"endColumn":39},{"ruleId":"92","severity":1,"message":"119","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":15},{"ruleId":"92","severity":1,"message":"120","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":13},{"ruleId":"92","severity":1,"message":"118","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":13},"no-unused-vars","'Shadows' is defined but never used.","Identifier","unusedVar","'font1' is assigned a value but never used.","'InputLabel' is defined but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-native-reassign",["121"],"no-negated-in-lhs",["122"],"'Link' is defined but never used.","'SettingsInputAntenna' is defined but never used.","'Redirect' is defined but never used.","'NavLink' is defined but never used.","'BookShelf' is defined but never used.","'history' is assigned a value but never used.","'updatedUserInfo' is assigned a value but never used.",["121"],["122"],"'useState' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'bookshelf' is defined but never used.","'Box' is defined but never used.","'Cookies' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]