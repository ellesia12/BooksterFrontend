
[{"/Users/imodrew/Desktop/BooksterFrontend/src/index.js":"1","/Users/imodrew/Desktop/BooksterFrontend/src/pages/HomePage.js":"2","/Users/imodrew/Desktop/BooksterFrontend/src/components/LogIn.js":"3","/Users/imodrew/Desktop/BooksterFrontend/src/components/Profile.js":"4","/Users/imodrew/Desktop/BooksterFrontend/src/components/Register.js":"5","/Users/imodrew/Desktop/BooksterFrontend/src/components/Introduction.js":"6","/Users/imodrew/Desktop/BooksterFrontend/src/components/BookCard.js":"7","/Users/imodrew/Desktop/BooksterFrontend/src/components/Search.js":"8","/Users/imodrew/Desktop/BooksterFrontend/src/App.js":"9","/Users/imodrew/Desktop/BooksterFrontend/src/components/HowItWorks.js":"10"},{"size":433,"mtime":1606467872874,"results":"11","hashOfConfig":"12"},{"size":663,"mtime":1606485320972,"results":"13","hashOfConfig":"12"},{"size":4756,"mtime":1606682944663,"results":"14","hashOfConfig":"12"},{"size":228,"mtime":1606467872614,"results":"15","hashOfConfig":"12"},{"size":5998,"mtime":1606732078896,"results":"16","hashOfConfig":"12"},{"size":1407,"mtime":1606682944660,"results":"17","hashOfConfig":"12"},{"size":3294,"mtime":1606735786867,"results":"18","hashOfConfig":"12"},{"size":3993,"mtime":1606732078898,"results":"19","hashOfConfig":"12"},{"size":1277,"mtime":1606682944653,"results":"20","hashOfConfig":"12"},{"size":3509,"mtime":1606682944657,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1yjbsru",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/imodrew/Desktop/BooksterFrontend/src/index.js",[],["47","48"],"/Users/imodrew/Desktop/BooksterFrontend/src/pages/HomePage.js",["49"],"import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport Introduction from \"../components/Introduction\";\nimport HowItWorks from \"../components/HowItWorks\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\n// import components\nimport NavBar from \"../components/NavBar\"\n\n\nconst useStyles = makeStyles(theme => ({\n   \n    root: {\n        backgroundColor: 'white',\n        height: \"300px\"\n    }\n\n\n    }))\n\nconst HomePage = () => {\n\nconst classes = useStyles();\n    return(\n        <div className={classes.root}>\n            <NavBar />\n            <Introduction />\n            <HowItWorks />\n        </div>\n\n    )\n}\n\nexport default HomePage;","/Users/imodrew/Desktop/BooksterFrontend/src/components/LogIn.js",["50","51","52","53","54","55"],"import React, { useState } from \"react\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\n\nimport Profile from \"./Profile\";\nimport { Redirect, Link, NavLink, useHistory } from \"react-router-dom\";\nimport BookShelf from \"./BookShelf\";\n\n\nconst InputField = withStyles({\n    root:{\n        \"& label.Mui-focused\":{\n            color: \"#DB5CA2\"\n        },\n        \"& label\":{\n            color: \"5CDB95\",\n            fontFamily:\"'Oswald', sans-serif\"\n        },\n        \"&:hover fieldSet\":{\n            borderColor: \"5CDB95\"\n        },\n        \"&.Mui-focused fieldSet\":{\n            borderColor: \"5CDB95\"\n        }\n    }\n})(TextField);\n\n\nconst useStyles = makeStyles(theme=>({\n    form:{\n        top:\"50%\",\n        left:\"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: \"absolute\"\n    },\n    button: {\n        marginTop: \"1rem\",\n        color: \"#C38D9E\",\n        borderColor: \"white\",\n        borderRadius: \"18px\",\n        fontFamily:\"'Oswald', sans-serif\"\n    },\n    header: {\n        textAlign: \"center\",\n        textTransform:\"uppercase\",\n        marginBottom:\"30px\",\n        fontFamily: \"font1\"\n    },\n    word: {\n        fontFamily:\"'Oswald', sans-serif\"\n    }\n}))\n\n\n\n\nconst LogIn = ({props}) =>{\n\n    const classes = useStyles();\n    const history = useHistory();\n\n    const [loginData, setLoginData] = useState({\n        email: '',\n        password: ''\n    })\n\n    const [userInfo, setUserInfo] = useState(null)\n    const [loggedIn, setLoggedIn] = useState(false)\n\n\n    const postOptions = {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({ loginData })\n    }\n\n\n\n\n    const handleLogin = (e) =>{\n        e.preventDefault();\n        // console.log(loginData)\n        fetch('http://localhost:3000/login', postOptions)\n            .then(response => response.json())\n            // .then(data => console.log(data))\n            .then((result, error)=>{\n                if(error === 'undefined') {\n                  console.log('bad')\n                \n                } else{\n                    setUserInfo(result)\n                    console.log(userInfo)\n                    setLoggedIn(true)\n                    history.push(\"/search\")\n\n                }\n            })  \n            /* .then((result)=> setUserInfo(result.rows[0]))\n            .catch(error=>console.log(error)) */\n            // .then(result=> console.log(result.rows[0]))\n            \n        }\n\n\n\n    const handleChange = (e) =>{\n        setLoginData({...loginData, [e.target.name]: e.target.value })\n        \n    }\n// need to add ONSUBMIT function \n\n    return (\n        <>\n            <Box component=\"div\" style={{background:\"#C38D9E\", height:\"100vh\"}}>\n                <Grid container justify=\"center\">\n                    <Box component=\"form\"  className={classes.form}>\n                        <Typography variant=\"h3\" className={classes.header}>\n                            Log In Below\n                        </Typography>\n                        <InputField \n                            label=\"Email\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"email\"\n                            value={loginData.email}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <InputField \n                            label=\"Password\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"password\"\n                            value={loginData.password}\n                            onChange={handleChange}\n                        />\n                        \n                        <Button type=\"submit\" onClick={handleLogin}  variant=\"contained\" fullWidth={true} className={classes.button} >\n                            Log In\n                        </Button>\n                        {userInfo ? <Typography className={classes.word}>Successful login!  Go to your profile {userInfo.first_name} </Typography> \n                        : <Typography className={classes.word}>you are not logged in! log in or register for an account</Typography>}    \n                        \n                        <Button   variant=\"contained\" fullWidth={true} className={classes.button} >\n                            Register for Bookster Here!\n                        </Button>\n                       \n                    </Box>         \n                </Grid>\n           </Box>\n        </>\n    );\n}\n\n\n\n\nexport default LogIn;\n\n","/Users/imodrew/Desktop/BooksterFrontend/src/components/Profile.js",[],"/Users/imodrew/Desktop/BooksterFrontend/src/components/Register.js",["56"],"import React, { useState, useEffect } from \"react\";\nimport '../App.css';\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\n\nconst InputField = withStyles({\n    root:{\n        \"& label.Mui-focused\":{\n            color: \"#DB5CA2\"\n        },\n        \"& label\":{\n            color: \"5CDB95\",\n            fontFamily:\"'Oswald', sans-serif\"\n        },\n        \"&:hover fieldSet\":{\n            borderColor: \"5CDB95\"\n        },\n        \"&.Mui-focused fieldSet\":{\n            borderColor: \"5CDB95\"\n        }\n    }\n})(TextField);\n\n\nconst useStyles = makeStyles(theme=>({\n    form:{\n        top:\"50%\",\n        left:\"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: \"absolute\"\n    },\n    button: {\n        marginTop: \"1rem\",\n        color: \"#C38D9E\",\n        borderColor: \"white\",\n        borderRadius: \"18px\",\n        fontFamily:\"'Oswald', sans-serif\"\n    },\n    header: {\n        textAlign: \"center\",\n        textTransform:\"uppercase\",\n        marginBottom:\"30px\",\n        fontFamily: \"font1\",\n    },\n    text: {\n        fontFamily: \"'Oswald', sans-serif\",\n        \n    },\n    word: {\n        fontFamily:\"'Oswald', sans-serif\"\n    }\n}))\n\n\n\n\n\n\n\n\nconst Register = () =>{\n    const classes = useStyles();\n    \n    \n    const [registerData, setRegisterData] = useState({\n        first_name: '',\n        surname: '',\n        email: '',\n        password: '',\n        bio: '',\n        fav_book: ''\n    });\n\nconst postOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify({ registerData })\n}\n\n//or use registerData.field \n\n\n\n\nconst handleRegister = (e) =>{\n    e.preventDefault();\n    console.log(registerData)\n    fetch('http://localhost:3000/register', postOptions)\n        .then(response => response.json())\n        .then(data => console.log(data))     \n}\n\nconst handleChange = (e) =>{\n    setRegisterData({...registerData, [e.target.name]: e.target.value })\n    \n}\n\n// need to add ONSUBMIT function \n//add link to log in page\n\n    return (\n        <>\n            <Box component=\"div\" style={{background:\"#C38D9E\", height:\"100vh\"}} className={classes.text}>\n                <Grid container justify=\"center\">\n                    <Box component=\"form\"  className={classes.form}>\n                        <Typography variant=\"h3\" className={classes.header}>\n                            Register for Bookster\n                        </Typography>\n                        <InputField \n                            label=\"First Name\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"first_name\"\n                            className={classes.text}\n                            value={registerData.first_name}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <InputField \n                            label=\"Surname\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"surname\"\n                            value={registerData.surname}\n                            onChange={handleChange}\n                        />\n                         <br />\n                        <InputField \n                            label=\"Email\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"email\"\n                            value={registerData.email}\n                            onChange={handleChange}\n                        />\n                         <br />\n                        <InputField \n                            label=\"Password\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"password\"\n                            value={registerData.password}\n                            onChange={handleChange}\n                            type=\"password\"\n                        />\n                         <br />\n                       {/*  <InputField \n                            label=\"Picture\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"email\"\n                        />\n                        <br /> */}\n                        <InputField \n                            label=\"Short Bio About You\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"bio\"\n                            value={registerData.bio}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <InputField \n                            label=\"What are your favorite books?\"\n                            fullWidth={true}\n                            margin=\"dense\"\n                            size=\"medium\"\n                            name=\"fav_book\"\n                            value={registerData.fav_book}\n                            onChange={handleChange}\n                        />\n                        <br />\n                        <Button type=\"submit\" onClick={handleRegister} variant=\"contained\" fullWidth={true} className={classes.button} >\n                            Register\n                        </Button>\n                        <Typography alignContent=\"center\" className={classes.word}>\n                            Already a user? Sign in <a href=\"/login\">here</a>\n                        </Typography>\n                    </Box>\n                </Grid>\n           </Box>\n        </>\n    );\n}\n\n\n\n\nexport default Register;\n\n","/Users/imodrew/Desktop/BooksterFrontend/src/components/Introduction.js",["57"],"import React from 'react';\nimport { Typography, Button, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport bookshelf from \"../Images/idealbookshelf.jpg\";\n\nconst useStyles = makeStyles({\n    \n    position: {\n        display: 'flex',\n        paddingBottom:\"70px\"\n    },\n   \n    buttonPosition: {\n        display: 'flex',\n        justifyContent: 'center',\n        textAlign: 'center',\n        \n\n    },\n\n    button: {\n        fontFamily: \"'Oswald', sans-serif\",\n    },\n    text: {\n        textAlign: 'center',\n        fontFamily: \"'Oswald', sans-serif\",\n\n    },\n    textAndButton: {\n        marginTop: '100px',\n        width: '600px'\n    }\n})\n\n\nconst Introduction = () => {\n\nconst classes = useStyles();\n\nreturn(\n<div className={classes.position}>\n\n       \n<Box className={classes.textAndButton}>\n        <Typography className={classes.text}>\n        Create your own book club today and connect \n        <br />\n        with friends and make new ones from anywhere in the world!\n        </Typography>\n \n    <Box className={classes.buttonPosition}>\n        <NavLink to='/register'>\n            <Button className={classes.button} >\n            Sign up!\n            </Button>\n        </NavLink>\n     </Box>\n</Box>\n <img \n            src={bookshelf}\n            width=\"500px\"\n        />\n\n</div>\n\n)\n}\n\nexport default Introduction;","/Users/imodrew/Desktop/BooksterFrontend/src/components/BookCard.js",["58","59","60","61","62"],"/Users/imodrew/Desktop/BooksterFrontend/src/components/Search.js",["63"],"/Users/imodrew/Desktop/BooksterFrontend/src/App.js",[],"/Users/imodrew/Desktop/BooksterFrontend/src/components/HowItWorks.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":13},{"ruleId":"68","severity":1,"message":"72","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":15},{"ruleId":"68","severity":1,"message":"73","line":6,"column":10,"nodeType":"70","messageId":"71","endLine":6,"endColumn":18},{"ruleId":"68","severity":1,"message":"74","line":6,"column":20,"nodeType":"70","messageId":"71","endLine":6,"endColumn":24},{"ruleId":"68","severity":1,"message":"75","line":6,"column":26,"nodeType":"70","messageId":"71","endLine":6,"endColumn":33},{"ruleId":"68","severity":1,"message":"76","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":17},{"ruleId":"68","severity":1,"message":"77","line":68,"column":12,"nodeType":"70","messageId":"71","endLine":68,"endColumn":20},{"ruleId":"68","severity":1,"message":"78","line":1,"column":27,"nodeType":"70","messageId":"71","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"80","line":60,"column":2,"nodeType":"81","endLine":63,"endColumn":11},{"ruleId":"68","severity":1,"message":"82","line":4,"column":16,"nodeType":"70","messageId":"71","endLine":4,"endColumn":25},{"ruleId":"68","severity":1,"message":"83","line":4,"column":27,"nodeType":"70","messageId":"71","endLine":4,"endColumn":38},{"ruleId":"68","severity":1,"message":"84","line":4,"column":40,"nodeType":"70","messageId":"71","endLine":4,"endColumn":50},{"ruleId":"68","severity":1,"message":"85","line":71,"column":7,"nodeType":"70","messageId":"71","endLine":71,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":119,"column":76,"nodeType":"88","endLine":120,"endColumn":15},{"ruleId":"68","severity":1,"message":"74","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":14},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'BookShelf' is defined but never used.","'loggedIn' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'postOptions' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-global-assign","no-unsafe-negation"]
