[{"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Search.js":"1","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatMessage.js":"2","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\index.js":"3","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\LogIn.js":"4","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatRoom.js":"5","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\HowItWorks.js":"6","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\AboutUs.js":"7","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\NavBar.js":"8","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookCard.js":"9","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Register.js":"10","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookShelf.js":"11","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Introduction.js":"12","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\pages\\HomePage.js":"13","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Profile.js":"14","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Chat.js":"15","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Footer.js":"16","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatInput.js":"17","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\hook\\windowPosition.js":"18"},{"size":4944,"mtime":1606827424178,"results":"19","hashOfConfig":"20"},{"size":1006,"mtime":1607183983984,"results":"21","hashOfConfig":"20"},{"size":452,"mtime":1606244071206,"results":"22","hashOfConfig":"20"},{"size":6422,"mtime":1607090432693,"results":"23","hashOfConfig":"20"},{"size":2370,"mtime":1607183983985,"results":"24","hashOfConfig":"20"},{"size":4097,"mtime":1607372012455,"results":"25","hashOfConfig":"20"},{"size":2281,"mtime":1607289901637,"results":"26","hashOfConfig":"20"},{"size":4264,"mtime":1607371676578,"results":"27","hashOfConfig":"20"},{"size":3976,"mtime":1607289901638,"results":"28","hashOfConfig":"20"},{"size":6194,"mtime":1606731927568,"results":"29","hashOfConfig":"20"},{"size":8658,"mtime":1607350194080,"results":"30","hashOfConfig":"20"},{"size":3671,"mtime":1607371637447,"results":"31","hashOfConfig":"20"},{"size":1017,"mtime":1607371528091,"results":"32","hashOfConfig":"20"},{"size":3141,"mtime":1607090432694,"results":"33","hashOfConfig":"20"},{"size":3883,"mtime":1607183983982,"results":"34","hashOfConfig":"20"},{"size":1449,"mtime":1607183844158,"results":"35","hashOfConfig":"20"},{"size":1687,"mtime":1607183983983,"results":"36","hashOfConfig":"20"},{"size":665,"mtime":1607371687626,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"st8waw",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Search.js",["81"],"import React, {useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\r\n\r\n\r\nimport BookCard from \"./BookCard\"\r\n\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n// import BookShelf from \"./BookShelf\";\r\n\r\n\r\nconst InputField = withStyles({\r\n    root:{\r\n        \"& label.Mui-focused\":{\r\n            color: \"#DB5CA2\"\r\n        },\r\n        \"& label\":{\r\n            color: \"5CDB95\",\r\n            fontFamily: \"'Oswald', sans-serif\"\r\n        },\r\n        \"&:hover fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        },\r\n        \"&.Mui-focused fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        }\r\n    }\r\n})(TextField);\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    form:{\r\n        top:\"50%\",\r\n        left:\"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        position: \"absolute\"\r\n    },\r\n    button: {\r\n        marginTop: \"1rem\",\r\n        color: \"black\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n        fontFamily:\"'Oswald', sans-serif\",\r\n        backgroundColor: '#fcf3cf'\r\n       \r\n        \r\n    },\r\n    header: {\r\n        textAlign: \"center\",\r\n        textTransform:\"uppercase\",\r\n        marginBottom:\"30px\",\r\n        fontFamily:\"font1\",\r\n        color:\"#fcf3cf\"\r\n    },\r\n    text:{\r\n        fontFamily: \"'Oswald', sans-serif\",\r\n        textAlign: \"center\",\r\n        // color:\"#fcd392\"\r\n    },\r\n    link:{\r\n        textDecoration: \"none\"\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        padding: '10px',\r\n        alignContent: 'space-around',\r\n        justifyContent:'space-around',\r\n        backgroundColor:'#718680'\r\n    },\r\n    divs: {\r\n        border: '1px solid black',\r\n        padding: '5px',\r\n        margin: '5px'\r\n\r\n    },\r\n    buttonBox: {\r\n        width:'150px',\r\n        display:'block',\r\n        marginLeft: 'auto',\r\n        marginRight:'auto'\r\n    }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Search = ({props}) =>{\r\n\r\nconst classes = useStyles();\r\n// const history = useHistory();\r\n\r\nconst [query, setQuery] = useState('');\r\nconst [results, setResults] =useState(null)\r\n// const [book, setBook] =useState([]);\r\n\r\nconst handleSearch = (e) =>{\r\n    setQuery(e.target.value)\r\n    // console.log(query)\r\n}\r\n\r\nconst handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n \r\n    axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=18&startIndex=1&key=AIzaSyDXXOp7xMvzIDXxTNqgD3oqjh8o5ZlHXMw`)\r\n    \r\n    .then(data =>{\r\n        setResults(data.data.items)\r\n        /* console.log(data.data.items) */\r\n    })\r\n    .catch(err=>{\r\n        console.log(err.res)\r\n    }) \r\n}\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <Box>\r\n            <Box component=\"div\" style={{background:\"#718680\", height:\"100vh\"}}>\r\n                <Grid container justify=\"center\">\r\n                    <Box component=\"form\"  onSubmit={handleSubmit} className={classes.form}>\r\n                        <Typography variant=\"h3\" className={classes.header}>\r\n                            What Book Are You Looking For?\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" className={classes.text}>\r\n                            You can search for a book based on title or author\r\n                        </Typography>\r\n                        <InputField \r\n                            label=\"search for a book\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"book\"\r\n                            value={query}\r\n                            onChange={handleSearch}\r\n                            type=\"text\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <br />\r\n                        <Box className={classes.buttonBox}>\r\n                            <Button type=\"submit\" onSubmit={handleSubmit}  variant=\"contained\"  fullWidth={true} className={classes.button} >\r\n                                Search\r\n                            </Button>\r\n                            <NavLink to=\"/bookshelf\" className={classes.link}>\r\n                                <Button  variant=\"contained\"  fullWidth={true} className={classes.button} >\r\n                                Go To My Bookshelf\r\n                            </Button>\r\n                            </NavLink>\r\n                        </Box>\r\n                    </Box> \r\n                   \r\n                </Grid>\r\n\r\n        \r\n           </Box>\r\n\r\n           <Box className={classes.flex}>\r\n           {results && results.map((book) => {\r\n               console.log(book)\r\n               \r\n               return (\r\n            <BookCard book={book} />\r\n           )})}\r\n           </Box>\r\n    </Box>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Search;",["82","83"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatMessage.js",[],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\index.js",[],["84","85"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\LogIn.js",["86","87","88","89","90"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\r\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\r\n\r\nimport Profile from \"./Profile\";\r\nimport { Redirect, Link, NavLink, useHistory } from \"react-router-dom\";\r\nimport BookShelf from \"./BookShelf\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nconst InputField = withStyles({\r\n    root:{\r\n        \"& label.Mui-focused\":{\r\n            color: \"#DB5CA2\"\r\n        },\r\n        \"& label\":{\r\n            color: \"5CDB95\",\r\n            fontFamily:\"'Oswald', sans-serif\"\r\n        },\r\n        \"&:hover fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        },\r\n        \"&.Mui-focused fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        }\r\n    }\r\n})(TextField);\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    form:{\r\n        top:\"50%\",\r\n        left:\"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        position: \"absolute\"\r\n    },\r\n    button: {\r\n        marginTop: \"1rem\",\r\n        color: \"#C38D9E\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n        fontFamily:\"'Oswald', sans-serif\"\r\n    },\r\n    header: {\r\n        textAlign: \"center\",\r\n        textTransform:\"uppercase\",\r\n        marginBottom:\"30px\",\r\n        fontFamily: \"font1\"\r\n    },\r\n    word: {\r\n        fontFamily:\"'Oswald', sans-serif\",\r\n        alignText: 'center'\r\n    }\r\n}))\r\n\r\n\r\n\r\n\r\nconst LogIn = ({props}) =>{\r\n\r\n\r\n\r\n    // const [auth, setAuth] = useState('');\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [loginData, setLoginData] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const [updatedUserInfo, setUpdatedUserInfo] = useState([]);\r\n\r\n    const [userInfo, setUserInfo] = useState(null)\r\n    // const [loggedIn, setLoggedIn] = useState(false)\r\n\r\n\r\n    \r\n\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        \r\n    const postOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({ loginData })\r\n    }\r\n        let token\r\n\r\n        fetch('http://localhost:3000/login', postOptions)\r\n        .then(\r\n            (response) => {\r\n                token = response.headers.get('x-secret-token')\r\n              if (response.ok) return response.json();\r\n              throw new Error(\"Network Error while fetching quote\");\r\n            },\r\n            (networkError) => {\r\n              console.log(networkError.message);\r\n            }\r\n          )\r\n          .then((data) => {\r\n            //   console.log(data)\r\n            Cookies.set('Bookster', token);\r\n            setUserInfo(data[0])\r\n            let myCookie = Cookies.get('Bookster');\r\n            console.log(myCookie)\r\n            // history.push('/search')\r\n            \r\n          })\r\n          .catch((e) => console.log(e.message));\r\n            /* .then((result)=> setUserInfo(result.rows[0]))\r\n            .catch(error=>console.log(error)) */\r\n            // .then(result=> console.log(result.rows[0]))\r\n            \r\n        }\r\n\r\n\r\n\r\n\r\nuseEffect(()=> {\r\n    if (userInfo){\r\n    const postOptions = {\r\n        method: 'POST',\r\n        headers: {'Authorization': `Bearer ${Cookies.get('Bookster')}`},\r\n        \r\n    }\r\n    \r\n    fetch('http://localhost:3000/login/me', postOptions)\r\n    .then(res=> res.json())\r\n    //what do we do from here?? i want to make an updated state with the info\r\n    // then push the person to their profile page\r\n    .then(data=>setUpdatedUserInfo(data))\r\n   \r\n    }\r\n    \r\n\r\n},[userInfo])\r\n    \r\n    \r\n\r\n    const handleChange = (e) =>{\r\n        setLoginData({...loginData, [e.target.name]: e.target.value })\r\n    }\r\n// need to add ONSUBMIT function \r\n\r\n    return (\r\n        <>\r\n            <Box component=\"div\" style={{background:\"#C38D9E\", height:\"100vh\"}}>\r\n                <Grid container justify=\"center\">\r\n                    <Box component=\"form\"  className={classes.form}>\r\n                        <Typography variant=\"h3\" className={classes.header}>\r\n                            Log In Below\r\n                        </Typography>\r\n                        <InputField \r\n                            label=\"Email\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"email\"\r\n                            value={loginData.email}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <br />\r\n                        <InputField \r\n                            label=\"Password\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"password\"\r\n                            value={loginData.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                        \r\n                        <Button type=\"submit\" onClick={handleLogin}  variant=\"contained\" fullWidth={true} className={classes.button} >\r\n                            Log In\r\n                        </Button>\r\n                        {userInfo ? \r\n                        <>\r\n                        <Typography className={classes.word}>Successful login! Review your profile below {userInfo.first_name}, or go to your Bookshelf </Typography> \r\n                        <Button   variant=\"contained\" fullWidth={true} className={classes.button} >\r\n                                Go to your bookshelf\r\n                            </Button>\r\n                        <Profile userInfo={userInfo}/>\r\n                        </>\r\n                        :<> \r\n                        <Typography className={classes.word}>You are not logged in! log in or register for an account</Typography>\r\n                            <Link to=\"/register\" style={{textDecoration: 'none'}}>\r\n                            <Button   variant=\"contained\" fullWidth={true} className={classes.button} >\r\n                                Register for Bookster Here!\r\n                            </Button>\r\n                            </Link>\r\n                           </> }    \r\n                        \r\n                        \r\n                      \r\n                    </Box>         \r\n                </Grid>\r\n           </Box>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default LogIn;\r\n\r\n",["91","92"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatRoom.js",["93","94","95"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\HowItWorks.js",["96"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\AboutUs.js",[],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\NavBar.js",["97"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookCard.js",["98","99","100","101","102"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Register.js",["103"],"import React, { useState, useEffect } from \"react\";\r\nimport '../App.css';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\r\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\r\n\r\nconst InputField = withStyles({\r\n    root:{\r\n        \"& label.Mui-focused\":{\r\n            color: \"#DB5CA2\"\r\n        },\r\n        \"& label\":{\r\n            color: \"5CDB95\",\r\n            fontFamily:\"'Oswald', sans-serif\"\r\n        },\r\n        \"&:hover fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        },\r\n        \"&.Mui-focused fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        }\r\n    }\r\n})(TextField);\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    form:{\r\n        top:\"50%\",\r\n        left:\"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        position: \"absolute\"\r\n    },\r\n    button: {\r\n        marginTop: \"1rem\",\r\n        color: \"#C38D9E\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n        fontFamily:\"'Oswald', sans-serif\"\r\n    },\r\n    header: {\r\n        textAlign: \"center\",\r\n        textTransform:\"uppercase\",\r\n        marginBottom:\"30px\",\r\n        fontFamily: \"font1\",\r\n    },\r\n    text: {\r\n        fontFamily: \"'Oswald', sans-serif\",\r\n        \r\n    },\r\n    word: {\r\n        fontFamily:\"'Oswald', sans-serif\"\r\n    }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Register = () =>{\r\n    const classes = useStyles();\r\n    \r\n    \r\n    const [registerData, setRegisterData] = useState({\r\n        first_name: '',\r\n        surname: '',\r\n        email: '',\r\n        password: '',\r\n        bio: '',\r\n        fav_book: ''\r\n    });\r\n\r\nconst postOptions = {\r\n    method: 'POST',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({ registerData })\r\n}\r\n\r\n//or use registerData.field \r\n\r\n\r\n\r\n\r\nconst handleRegister = (e) =>{\r\n    e.preventDefault();\r\n    console.log(registerData)\r\n    fetch('http://localhost:3000/register', postOptions)\r\n        .then(response => response.json())\r\n        .then(data => console.log(data))     \r\n}\r\n\r\nconst handleChange = (e) =>{\r\n    setRegisterData({...registerData, [e.target.name]: e.target.value })\r\n    \r\n}\r\n\r\n// need to add ONSUBMIT function \r\n//add link to log in page\r\n\r\n    return (\r\n        <>\r\n            <Box component=\"div\" style={{background:\"#C38D9E\", height:\"100vh\"}} className={classes.text}>\r\n                <Grid container justify=\"center\">\r\n                    <Box component=\"form\"  className={classes.form}>\r\n                        <Typography variant=\"h3\" className={classes.header}>\r\n                            Register for Bookster\r\n                        </Typography>\r\n                        <InputField \r\n                            label=\"First Name\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"first_name\"\r\n                            className={classes.text}\r\n                            value={registerData.first_name}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <br />\r\n                        <InputField \r\n                            label=\"Surname\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"surname\"\r\n                            value={registerData.surname}\r\n                            onChange={handleChange}\r\n                        />\r\n                         <br />\r\n                        <InputField \r\n                            label=\"Email\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"email\"\r\n                            value={registerData.email}\r\n                            onChange={handleChange}\r\n                        />\r\n                         <br />\r\n                        <InputField \r\n                            label=\"Password\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"password\"\r\n                            value={registerData.password}\r\n                            onChange={handleChange}\r\n                            type=\"password\"\r\n                        />\r\n                         <br />\r\n                       {/*  <InputField \r\n                            label=\"Picture\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"email\"\r\n                        />\r\n                        <br /> */}\r\n                        <InputField \r\n                            label=\"Short Bio About You\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"bio\"\r\n                            value={registerData.bio}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <br />\r\n                        <InputField \r\n                            label=\"What are your favorite books?\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"fav_book\"\r\n                            value={registerData.fav_book}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <br />\r\n                        <Button type=\"submit\" onClick={handleRegister} variant=\"contained\" fullWidth={true} className={classes.button} >\r\n                            Register\r\n                        </Button>\r\n                        <Typography alignContent=\"center\" className={classes.word}>\r\n                            Already a user? Sign in <a href=\"/login\">here</a>\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n           </Box>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Register;\r\n\r\n",["104","105"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookShelf.js",["106","107","108","109","110","111"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Introduction.js",["112"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\pages\\HomePage.js",["113","114"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Profile.js",["115","116","117","118"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Chat.js",["119","120","121","122"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Footer.js",["123","124"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatInput.js",["125"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\hook\\windowPosition.js",[],{"ruleId":"126","severity":1,"message":"127","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"130","replacedBy":"134"},{"ruleId":"132","replacedBy":"135"},{"ruleId":"126","severity":1,"message":"136","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":18},{"ruleId":"126","severity":1,"message":"137","line":6,"column":26,"nodeType":"128","messageId":"129","endLine":6,"endColumn":33},{"ruleId":"126","severity":1,"message":"138","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":17},{"ruleId":"126","severity":1,"message":"139","line":64,"column":11,"nodeType":"128","messageId":"129","endLine":64,"endColumn":18},{"ruleId":"126","severity":1,"message":"140","line":71,"column":12,"nodeType":"128","messageId":"129","endLine":71,"endColumn":27},{"ruleId":"130","replacedBy":"141"},{"ruleId":"132","replacedBy":"142"},{"ruleId":"126","severity":1,"message":"143","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":12},{"ruleId":"126","severity":1,"message":"144","line":4,"column":21,"nodeType":"128","messageId":"129","endLine":4,"endColumn":31},{"ruleId":"126","severity":1,"message":"145","line":4,"column":41,"nodeType":"128","messageId":"129","endLine":4,"endColumn":45},{"ruleId":"126","severity":1,"message":"146","line":2,"column":33,"nodeType":"128","messageId":"129","endLine":2,"endColumn":43},{"ruleId":"126","severity":1,"message":"147","line":17,"column":52,"nodeType":"128","messageId":"129","endLine":17,"endColumn":72},{"ruleId":"126","severity":1,"message":"148","line":1,"column":16,"nodeType":"128","messageId":"129","endLine":1,"endColumn":24},{"ruleId":"126","severity":1,"message":"144","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":20},{"ruleId":"126","severity":1,"message":"149","line":5,"column":16,"nodeType":"128","messageId":"129","endLine":5,"endColumn":25},{"ruleId":"126","severity":1,"message":"150","line":5,"column":27,"nodeType":"128","messageId":"129","endLine":5,"endColumn":38},{"ruleId":"126","severity":1,"message":"146","line":5,"column":40,"nodeType":"128","messageId":"129","endLine":5,"endColumn":50},{"ruleId":"126","severity":1,"message":"151","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"130","replacedBy":"152"},{"ruleId":"132","replacedBy":"153"},{"ruleId":"126","severity":1,"message":"154","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":18},{"ruleId":"126","severity":1,"message":"155","line":114,"column":12,"nodeType":"128","messageId":"129","endLine":114,"endColumn":20},{"ruleId":"126","severity":1,"message":"156","line":114,"column":22,"nodeType":"128","messageId":"129","endLine":114,"endColumn":33},{"ruleId":"126","severity":1,"message":"157","line":115,"column":12,"nodeType":"128","messageId":"129","endLine":115,"endColumn":16},{"ruleId":"126","severity":1,"message":"158","line":116,"column":12,"nodeType":"128","messageId":"129","endLine":116,"endColumn":24},{"ruleId":"126","severity":1,"message":"159","line":139,"column":9,"nodeType":"128","messageId":"129","endLine":139,"endColumn":20},{"ruleId":"126","severity":1,"message":"160","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":17},{"ruleId":"126","severity":1,"message":"148","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"126","severity":1,"message":"161","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":13},{"ruleId":"126","severity":1,"message":"144","line":3,"column":21,"nodeType":"128","messageId":"129","endLine":3,"endColumn":31},{"ruleId":"126","severity":1,"message":"162","line":3,"column":33,"nodeType":"128","messageId":"129","endLine":3,"endColumn":39},{"ruleId":"126","severity":1,"message":"145","line":3,"column":41,"nodeType":"128","messageId":"129","endLine":3,"endColumn":45},{"ruleId":"126","severity":1,"message":"161","line":3,"column":47,"nodeType":"128","messageId":"129","endLine":3,"endColumn":50},{"ruleId":"126","severity":1,"message":"163","line":7,"column":22,"nodeType":"128","messageId":"129","endLine":7,"endColumn":32},{"ruleId":"126","severity":1,"message":"164","line":71,"column":9,"nodeType":"128","messageId":"129","endLine":71,"endColumn":14},{"ruleId":"126","severity":1,"message":"165","line":71,"column":16,"nodeType":"128","messageId":"129","endLine":71,"endColumn":24},{"ruleId":"166","severity":1,"message":"167","line":120,"column":8,"nodeType":"168","endLine":120,"endColumn":18,"suggestions":"169"},{"ruleId":"126","severity":1,"message":"127","line":5,"column":52,"nodeType":"128","messageId":"129","endLine":5,"endColumn":56},{"ruleId":"126","severity":1,"message":"161","line":5,"column":58,"nodeType":"128","messageId":"129","endLine":5,"endColumn":61},{"ruleId":"126","severity":1,"message":"163","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":32},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["170"],"no-negated-in-lhs",["171"],["170"],["171"],"'Redirect' is defined but never used.","'NavLink' is defined but never used.","'BookShelf' is defined but never used.","'history' is assigned a value but never used.","'updatedUserInfo' is assigned a value but never used.",["170"],["171"],"'Chat' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","'CardHeader' is defined but never used.","'SettingsInputAntenna' is defined but never used.","'useState' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'useEffect' is defined but never used.",["170"],["171"],"'InputLabel' is defined but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'open' is assigned a value but never used.","'selectedBook' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'bookshelf' is defined but never used.","'Box' is defined but never used.","'Button' is defined but never used.","'withStyles' is defined but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["172"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},"Update the dependencies array to be: [messages, socket]",{"range":"175","text":"176"},[2951,2961],"[messages, socket]"]