[{"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\index.js":"1","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Search.js":"2","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatRoom.js":"3","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\AboutUs.js":"4","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Chat.js":"5","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Introduction.js":"6","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\InfoBar.js":"7","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Register.js":"8","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\LogIn.js":"9","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookCard.js":"10","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\theme.js":"11"},{"size":452,"mtime":1606244071206,"results":"12","hashOfConfig":"13"},{"size":4970,"mtime":1607423487979,"results":"14","hashOfConfig":"13"},{"size":2370,"mtime":1607183983985,"results":"15","hashOfConfig":"13"},{"size":2281,"mtime":1607289901637,"results":"16","hashOfConfig":"13"},{"size":4032,"mtime":1607372842309,"results":"17","hashOfConfig":"13"},{"size":4013,"mtime":1607422701060,"results":"18","hashOfConfig":"13"},{"size":1286,"mtime":1607372842313,"results":"19","hashOfConfig":"13"},{"size":6194,"mtime":1606731927568,"results":"20","hashOfConfig":"13"},{"size":6558,"mtime":1607421000001,"results":"21","hashOfConfig":"13"},{"size":3976,"mtime":1607289901638,"results":"22","hashOfConfig":"13"},{"size":610,"mtime":1607183844171,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"st8waw",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\index.js",[],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Search.js",["51"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatRoom.js",["52","53","54"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Chat from \"./Chat\";\r\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\r\n\r\nconst InputField = withStyles({\r\n  root:{\r\n      \"& label.Mui-focused\":{\r\n          color: \"#DB5CA2\"\r\n      },\r\n      \"& label\":{\r\n          color: \"5CDB95\",\r\n          fontFamily:\"'Oswald', sans-serif\"\r\n      },\r\n      \"&:hover fieldSet\":{\r\n          borderColor: \"5CDB95\"\r\n      },\r\n      \"&.Mui-focused fieldSet\":{\r\n          borderColor: \"5CDB95\"\r\n      }\r\n  }\r\n})(TextField);\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n\r\n   heading: {\r\n     alignText: 'center',\r\n    fontFamily:\"'Oswald', sans-serif\"\r\n\r\n   },\r\n    \r\n    button: {\r\n        marginTop: \"1rem\",\r\n        color: \"#C38D9E\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n        fontFamily:\"'Oswald', sans-serif\"\r\n    },\r\n    position: {\r\n      top:\"50%\",\r\n        left:\"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        position: \"absolute\"\r\n       \r\n    },\r\n    buttonPosition: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    word: {\r\n        fontFamily:\"'Oswald', sans-serif\"\r\n    }\r\n}))\r\n\r\nconst ChatRoom = () => {\r\n\r\nconst classes = useStyles();\r\n\r\nconst [ name, setName ] = useState('');\r\nconst [ room, setRoom ] = useState('');\r\n\r\n\r\n    return (\r\n<>\r\n    <Box >\r\n      <Box className={classes.position}>\r\n        <h1 className={classes.heading}>Join</h1>\r\n        <Box>\r\n          <InputField\r\n           placeholder=\"Name\"\r\n            className=\"joinInput\"\r\n             type=\"text\" \r\n             onChange={(event) => setName(event.target.value)} \r\n\r\n             />\r\n        </Box>\r\n        <Box>\r\n          <InputField\r\n           placeholder=\"Room\"\r\n            className=\"joinInput mt-20\"\r\n             type=\"text\"\r\n              onChange={(event) => setRoom(event.target.value)} />\r\n        </Box>\r\n      <Box className={classes.buttonPosition}>\r\n        <Link onClick={e => (!name || !room) ? e.preventDefault() : null} to={`/chat?name=${name}&room=${room}`}>\r\n          <Button className={classes.button} type=\"submit\">Sign In</Button>\r\n        </Link>\r\n        </Box>\r\n      </Box>\r\n     \r\n    </Box>\r\n        </>\r\n    );\r\n}\r\n    \r\n \r\nexport default ChatRoom;\r\n\r\n\r\n\r\n",["55","56"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\AboutUs.js",[],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Chat.js",["57","58"],"import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport InfoBar from './InfoBar';\r\nimport Input from './ChatInput';\r\nimport Messages from './ChatMessages';\r\n\r\nimport { Box, Card } from '@material-ui/core';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\r\n\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n\r\n    heading: {\r\n      alignText: 'center',\r\n     fontFamily:\"'Oswald', sans-serif\"\r\n \r\n    },\r\n     \r\n     button: {\r\n         marginTop: \"1rem\",\r\n         color: \"#C38D9E\",\r\n         borderColor: \"white\",\r\n         borderRadius: \"18px\",\r\n         fontFamily:\"'Oswald', sans-serif\"\r\n     },\r\n     position: {\r\n        \r\n       top:\"50%\",\r\n         left:\"50%\",\r\n         transform: \"translate(-50%, -50%)\",\r\n         position: \"absolute\"\r\n        \r\n     },\r\n     buttonPosition: {\r\n         display: 'flex',\r\n         justifyContent: 'center'\r\n     },\r\n     word: {\r\n         fontFamily:\"'Oswald', sans-serif\"\r\n     },\r\n     roomPosition: {\r\n         display: 'flex',\r\n         justifyContent: 'center'\r\n     },\r\n     outerContainer: {\r\n          backgroundColor: '#718680',\r\n     }, \r\n     textArea: {\r\n         padding: '20px',\r\n         height: '300px',\r\n         width: '300px',\r\n         color: '#fcf3cf',\r\n        \r\n     }\r\n }))\r\n\r\n\r\n\r\nconst Chat = () => {  \r\n    const classes = useStyles();\r\n let location = useLocation();\r\nconst [ name, setName ] = useState('');\r\nconst [ room, setRoom ] = useState('classics');\r\nconst [ message, setMessage ] = useState('');\r\nconst [ messages, setMessages ] = useState([]);\r\nconst [ users, setUsers ] = useState([]);\r\n\r\nconst ENDPOINT = \"http://localhost:3000\";\r\n\r\nconst socket = io(ENDPOINT, {\r\n    // withCredentials: true,\r\n    extraHeaders: {\r\n        \"Bookster\":\"x-secret-token\"\r\n    }\r\n});\r\n\r\n//This useEffect joins the user to the room\r\n\r\nuseEffect(() => {\r\n    const { name, room } = queryString.parse(location.search)\r\n    const socket = io(ENDPOINT, {\r\n        // withCredentials: true,\r\n        extraHeaders: {\r\n            \"Bookster\":\"x-secret-token\"\r\n        }\r\n    });\r\n \r\n    setName(name);\r\n    \r\n    setRoom(room); \r\n    \r\n\r\n    socket.emit('join', { name, room }, (error) => {\r\n        if(error){\r\n            alert(error);\r\n        }\r\n    });\r\n    return() => {\r\n        socket.emit('disconnected')\r\n        socket.off();\r\n    }\r\n\r\n},[ENDPOINT, location.search]);\r\n\r\n// This useEffect will handle messages\r\n//We will keep track of all messages using a state called 'messages' and inside \r\n//the messages we will have an array that will store all messages.Then we need to \r\n//also specify each message so we will keep this in a state called 'message' \r\n\r\nuseEffect(() => {\r\n    \r\n    socket.on('message', (message) => {\r\n        // This sends each message sent to our messages array.\r\n        setMessages([...messages, message]);\r\n        });\r\n\r\n        socket.on('roomData', ({users}) => {\r\n            setUsers(users);\r\n        });\r\n    }, [messages, users]);\r\n\r\n    console.log(users)\r\n\r\n    \r\n\r\n\r\n    // function for sending messages\r\nconst sendMessage = (event) => {\r\n    event.preventDefault();\r\n    if(message) {\r\n        socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n}\r\n// console.log(message, messages);\r\n\r\n\r\n return(  \r\n\r\n    <Card>\r\n    <Box style={{background:\"#718680\", height:\"100vh\"}}>\r\n        <Box >\r\n            <Box className={classes.roomPosition}>\r\n               <InfoBar room={room} />\r\n            </Box>\r\n            <Box className={classes.position}>\r\n                <Box className={classes.textArea}>\r\n                <Messages messages={messages} name={name} />\r\n                </Box>\r\n                <Box>\r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n                </Box>\r\n            </Box>\r\n                \r\n            </Box>\r\n         \r\n        </Box>\r\n    </Card>\r\n\r\n    );\r\n}\r\nexport default Chat;\r\n\r\n","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Introduction.js",["59","60"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\InfoBar.js",["61"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Register.js",["62"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\LogIn.js",["63","64","65","66","67"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookCard.js",["68","69","70","71","72"],"import React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core'\r\nimport { Card, CardMedia, CardContent, CardHeader, Button , Modal, Backdrop, Box } from \"@material-ui/core\";\r\nimport { useSpring, animated } from '@react-spring/web';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n\t  display: 'flex',\r\n\t  alignItems: 'center',\r\n\t  justifyContent: 'center',\r\n\t},\r\n\tpaper: {\r\n\t  backgroundColor: '#718680',\r\n\t  border: '2px solid #fcf3cf',\r\n\t//   boxShadow: theme.shadows[5],\r\n\t  padding: theme.spacing(2, 4, 3),\r\n\t  width: '400px'\r\n\t},\r\n\tbookDisplay: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContnet: \"center\",\r\n\t\twidth: '150px'\r\n\t},\r\n\tbutton: {\r\n        marginTop: \"1rem\",\r\n        color: \"black\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n\t\tfontFamily:\"'Oswald', sans-serif\",\r\n        backgroundColor: '#fcf3cf'\r\n\t},\r\n\tbookTitle: {\r\n\t\tcolor:'#fcf3cf',\r\n\t\tfontFamily: \"font1\",\r\n\t\ttextTransform: 'uppercase'\r\n\t},\r\n\tbookDescription: {\r\n\t\tfontFamily:\"'Oswald', sans-serif\",\r\n\t\tcolor:'#fcf3cf',\r\n\t},\r\n\tauthor: {\r\n\t\tfontFamily:\"'Oswald', sans-serif\",\r\n\t\tcolor:'#fcf3cf',\r\n\t}\r\n  }));\r\n  \r\n  const Fade = React.forwardRef(function Fade(props, ref) {\r\n\tconst { in: open, children, onEnter, onExited, ...other } = props;\r\n\tconst style = useSpring({\r\n\t  from: { opacity: 0 },\r\n\t  to: { opacity: open ? 1 : 0 },\r\n\t  onStart: () => {\r\n\t\tif (open && onEnter) {\r\n\t\t  onEnter();\r\n\t\t}\r\n\t  },\r\n\t  onRest: () => {\r\n\t\tif (!open && onExited) {\r\n\t\t  onExited();\r\n\t\t}\r\n\t  },\r\n\t});\r\n  \r\n\treturn (\r\n\t  <animated.div ref={ref} style={style} {...other}>\r\n\t\t{children}\r\n\t  </animated.div>\r\n\t);\r\n  });\r\n  \r\n  Fade.propTypes = {\r\n\tchildren: PropTypes.element,\r\n\tin: PropTypes.bool.isRequired,\r\n\tonEnter: PropTypes.func,\r\n\tonExited: PropTypes.func,\r\n  };\r\n\r\n\r\nconst BookCard = ({ book }) => {\r\n\t\r\n\t\r\n\r\n\r\n  \r\n\r\nconst handleAddBooks = (e) =>{\r\n\te.preventDefault();\r\n\r\n\tconst bookData = {\r\n\t\ttitle: book.volumeInfo.title,\r\n\t\tthumbnail: book.volumeInfo.imageLinks.thumbnail,\r\n\t\tsynopsis: book.volumeInfo.description,\r\n\t\tauthor: book.volumeInfo.authors[0],\r\n\t\tgoogleid: book.id,\r\n\t\tgenre: 'classics'\r\n\r\n\t}\r\n\t\r\n\tfetch('http://localhost:3000/books', {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {'Content-Type': 'application/json'},\r\n\t\tbody: JSON.stringify({ bookData })\r\n\t})\r\n\t.then(response => response.json())\r\n\t.then(data => console.log(data))\r\n}\r\n\r\n    \r\nconst classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n\t\r\n\treturn(\t\r\n\t\t<>\r\n\t{book && book.volumeInfo && book.volumeInfo.imageLinks ? <div className={classes.bookGrid}>\r\n\t<Box className={classes.bookDisplay}>\r\n\t\t<img src={book.volumeInfo.imageLinks.thumbnail} alt={book.title}/>\r\n\t\t  <button type=\"button\" variant=\"contained\" onClick={handleOpen} className={classes.button}>\r\n\t\t\tRead more\r\n\t\t  </button>\r\n\t\t  <Button type=\"submit\"  variant=\"contained\" onClick={handleAddBooks} className={classes.button}>Save to MyBooks</Button>\r\n\t</Box>\r\n\t\t  <Modal\r\n\t\t\taria-labelledby=\"spring-modal-title\"\r\n\t\t\taria-describedby=\"spring-modal-description\"\r\n\t\t\tclassName={classes.modal}\r\n\t\t\topen={open}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t  timeout: 500,\r\n\t\t\t}}\r\n\t\t  >\r\n\t\t\t<Fade in={open}>\r\n\t\t\t<Card>\r\n\t\t\t  <div className={classes.paper}>\r\n\t\t\t\t  <p className={classes.bookTitle}>{book.volumeInfo.title}</p>\r\n\t\t\t\t<img src={book.volumeInfo.imageLinks.thumbnail} alt={book.title} width=\"250px\" className={classes.bookImage}/>\r\n\t\t\t\t<p alignText='center'>By {book.volumeInfo.authors}</p>\r\n\t\t\t\t<br />\r\n\t\t\t\t<p className={classes.bookDescription}>{book.volumeInfo.description}</p>\r\n\t\t\t  </div>\r\n\t\t\t</Card>\r\n\t\t\t</Fade>\r\n\t\t  </Modal>\r\n\t\t</div> : null} \r\n\t\t</>\r\n\r\n)\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default BookCard;\r\n\r\n",["73","74"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\theme.js",["75","76"],{"ruleId":"77","severity":1,"message":"78","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":12},{"ruleId":"77","severity":1,"message":"82","line":4,"column":21,"nodeType":"79","messageId":"80","endLine":4,"endColumn":31},{"ruleId":"77","severity":1,"message":"83","line":4,"column":41,"nodeType":"79","messageId":"80","endLine":4,"endColumn":45},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"77","severity":1,"message":"88","line":8,"column":22,"nodeType":"79","messageId":"80","endLine":8,"endColumn":32},{"ruleId":"89","severity":1,"message":"90","line":126,"column":8,"nodeType":"91","endLine":126,"endColumn":25,"suggestions":"92"},{"ruleId":"77","severity":1,"message":"93","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":17},{"ruleId":"77","severity":1,"message":"94","line":10,"column":8,"nodeType":"79","messageId":"80","endLine":10,"endColumn":13},{"ruleId":"77","severity":1,"message":"88","line":2,"column":22,"nodeType":"79","messageId":"80","endLine":2,"endColumn":32},{"ruleId":"77","severity":1,"message":"95","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"96","line":6,"column":10,"nodeType":"79","messageId":"80","endLine":6,"endColumn":18},{"ruleId":"77","severity":1,"message":"97","line":6,"column":26,"nodeType":"79","messageId":"80","endLine":6,"endColumn":33},{"ruleId":"77","severity":1,"message":"98","line":7,"column":8,"nodeType":"79","messageId":"80","endLine":7,"endColumn":17},{"ruleId":"77","severity":1,"message":"99","line":67,"column":11,"nodeType":"79","messageId":"80","endLine":67,"endColumn":18},{"ruleId":"77","severity":1,"message":"100","line":74,"column":12,"nodeType":"79","messageId":"80","endLine":74,"endColumn":27},{"ruleId":"77","severity":1,"message":"101","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":24},{"ruleId":"77","severity":1,"message":"82","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":20},{"ruleId":"77","severity":1,"message":"102","line":5,"column":16,"nodeType":"79","messageId":"80","endLine":5,"endColumn":25},{"ruleId":"77","severity":1,"message":"103","line":5,"column":27,"nodeType":"79","messageId":"80","endLine":5,"endColumn":38},{"ruleId":"77","severity":1,"message":"104","line":5,"column":40,"nodeType":"79","messageId":"80","endLine":5,"endColumn":50},{"ruleId":"84","replacedBy":"105"},{"ruleId":"86","replacedBy":"106"},{"ruleId":"77","severity":1,"message":"107","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":17},{"ruleId":"77","severity":1,"message":"108","line":6,"column":7,"nodeType":"79","messageId":"80","endLine":6,"endColumn":12},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Chat' is defined but never used.","'Typography' is defined but never used.","'Grid' is defined but never used.","no-native-reassign",["109"],"no-negated-in-lhs",["110"],"'withStyles' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["111"],"'bookshelf' is defined but never used.","'image' is defined but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'NavLink' is defined but never used.","'BookShelf' is defined but never used.","'history' is assigned a value but never used.","'updatedUserInfo' is assigned a value but never used.","'useState' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.",["109"],["110"],"'Shadows' is defined but never used.","'font1' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [messages, socket, users]",{"range":"114","text":"115"},[3060,3077],"[messages, socket, users]"]