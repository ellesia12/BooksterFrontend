[{"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\index.js":"1","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookCard.js":"2","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Profile.js":"3","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatRoom.js":"4","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Introduction.js":"5","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\AboutUs.js":"6","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\HowItWorks.js":"7","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\NavBar.js":"8","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\LogIn.js":"9","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookShelf.js":"10","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatMessage.js":"11","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Register.js":"12","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Search.js":"13","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatMessages.js":"14","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Chat.js":"15","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatInput.js":"16","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Footer.js":"17","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\InfoBar.js":"18","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\hook\\windowPosition.js":"19"},{"size":452,"mtime":1606244071206,"results":"20","hashOfConfig":"21"},{"size":3976,"mtime":1607507899845,"results":"22","hashOfConfig":"21"},{"size":3141,"mtime":1607090432694,"results":"23","hashOfConfig":"21"},{"size":3862,"mtime":1607527410622,"results":"24","hashOfConfig":"21"},{"size":4548,"mtime":1607527410624,"results":"25","hashOfConfig":"21"},{"size":3796,"mtime":1607527410619,"results":"26","hashOfConfig":"21"},{"size":4262,"mtime":1607527410623,"results":"27","hashOfConfig":"21"},{"size":4197,"mtime":1607527410627,"results":"28","hashOfConfig":"21"},{"size":7042,"mtime":1607524196377,"results":"29","hashOfConfig":"21"},{"size":9633,"mtime":1607527410619,"results":"30","hashOfConfig":"21"},{"size":2352,"mtime":1607527410621,"results":"31","hashOfConfig":"21"},{"size":6377,"mtime":1607523239760,"results":"32","hashOfConfig":"21"},{"size":5031,"mtime":1607527410629,"results":"33","hashOfConfig":"21"},{"size":663,"mtime":1607527410621,"results":"34","hashOfConfig":"21"},{"size":4053,"mtime":1607527067007,"results":"35","hashOfConfig":"21"},{"size":2062,"mtime":1607517210636,"results":"36","hashOfConfig":"21"},{"size":1449,"mtime":1607183844158,"results":"37","hashOfConfig":"21"},{"size":1544,"mtime":1607507906107,"results":"38","hashOfConfig":"21"},{"size":665,"mtime":1607372842316,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"st8waw",{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\index.js",[],["90","91"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookCard.js",["92","93","94","95","96"],"import React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core'\r\nimport { Card, CardMedia, CardContent, CardHeader, Button , Modal, Backdrop, Box } from \"@material-ui/core\";\r\nimport { useSpring, animated } from '@react-spring/web';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tmodal: {\r\n\t  display: 'flex',\r\n\t  alignItems: 'center',\r\n\t  justifyContent: 'center',\r\n\t},\r\n\tpaper: {\r\n\t  backgroundColor: '#718680',\r\n\t  border: '2px solid #fcf3cf',\r\n\t//   boxShadow: theme.shadows[5],\r\n\t  padding: theme.spacing(2, 4, 3),\r\n\t  width: '400px'\r\n\t},\r\n\tbookDisplay: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContnet: \"center\",\r\n\t\twidth: '150px'\r\n\t},\r\n\tbutton: {\r\n        marginTop: \"1rem\",\r\n        color: \"black\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n\t\tfontFamily:\"'Oswald', sans-serif\",\r\n        backgroundColor: '#fcf3cf'\r\n\t},\r\n\tbookTitle: {\r\n\t\tcolor:'#fcf3cf',\r\n\t\tfontFamily: \"font1\",\r\n\t\ttextTransform: 'uppercase'\r\n\t},\r\n\tbookDescription: {\r\n\t\tfontFamily:\"'Oswald', sans-serif\",\r\n\t\tcolor:'#fcf3cf',\r\n\t},\r\n\tauthor: {\r\n\t\tfontFamily:\"'Oswald', sans-serif\",\r\n\t\tcolor:'#fcf3cf',\r\n\t}\r\n  }));\r\n  \r\n  const Fade = React.forwardRef(function Fade(props, ref) {\r\n\tconst { in: open, children, onEnter, onExited, ...other } = props;\r\n\tconst style = useSpring({\r\n\t  from: { opacity: 0 },\r\n\t  to: { opacity: open ? 1 : 0 },\r\n\t  onStart: () => {\r\n\t\tif (open && onEnter) {\r\n\t\t  onEnter();\r\n\t\t}\r\n\t  },\r\n\t  onRest: () => {\r\n\t\tif (!open && onExited) {\r\n\t\t  onExited();\r\n\t\t}\r\n\t  },\r\n\t});\r\n  \r\n\treturn (\r\n\t  <animated.div ref={ref} style={style} {...other}>\r\n\t\t{children}\r\n\t  </animated.div>\r\n\t);\r\n  });\r\n  \r\n  Fade.propTypes = {\r\n\tchildren: PropTypes.element,\r\n\tin: PropTypes.bool.isRequired,\r\n\tonEnter: PropTypes.func,\r\n\tonExited: PropTypes.func,\r\n  };\r\n\r\n\r\nconst BookCard = ({ book }) => {\r\n\t\r\n\t\r\n\r\n\r\n  \r\n\r\nconst handleAddBooks = (e) =>{\r\n\te.preventDefault();\r\n\r\n\tconst bookData = {\r\n\t\ttitle: book.volumeInfo.title,\r\n\t\tthumbnail: book.volumeInfo.imageLinks.thumbnail,\r\n\t\tsynopsis: book.volumeInfo.description,\r\n\t\tauthor: book.volumeInfo.authors[0],\r\n\t\tgoogleid: book.id,\r\n\t\tgenre: 'classics'\r\n\r\n\t}\r\n\t\r\n\tfetch('http://localhost:3000/books', {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {'Content-Type': 'application/json'},\r\n\t\tbody: JSON.stringify({ bookData })\r\n\t})\r\n\t.then(response => response.json())\r\n\t.then(data => console.log(data))\r\n}\r\n\r\n    \r\nconst classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n\t\r\n\treturn(\t\r\n\t\t<>\r\n\t{book && book.volumeInfo && book.volumeInfo.imageLinks ? <div className={classes.bookGrid}>\r\n\t<Box className={classes.bookDisplay}>\r\n\t\t<img src={book.volumeInfo.imageLinks.thumbnail} alt={book.title}/>\r\n\t\t  <button type=\"button\" variant=\"contained\" onClick={handleOpen} className={classes.button}>\r\n\t\t\tRead more\r\n\t\t  </button>\r\n\t\t  <Button type=\"submit\"  variant=\"contained\" onClick={handleAddBooks} className={classes.button}>Save to MyBooks</Button>\r\n\t</Box>\r\n\t\t  <Modal\r\n\t\t\taria-labelledby=\"spring-modal-title\"\r\n\t\t\taria-describedby=\"spring-modal-description\"\r\n\t\t\tclassName={classes.modal}\r\n\t\t\topen={open}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tcloseAfterTransition\r\n\t\t\tBackdropComponent={Backdrop}\r\n\t\t\tBackdropProps={{\r\n\t\t\t  timeout: 500,\r\n\t\t\t}}\r\n\t\t  >\r\n\t\t\t<Fade in={open}>\r\n\t\t\t<Card>\r\n\t\t\t  <div className={classes.paper}>\r\n\t\t\t\t  <p className={classes.bookTitle}>{book.volumeInfo.title}</p>\r\n\t\t\t\t<img src={book.volumeInfo.imageLinks.thumbnail} alt={book.title} width=\"250px\" className={classes.bookImage}/>\r\n\t\t\t\t<p alignText='center'>By {book.volumeInfo.authors}</p>\r\n\t\t\t\t<br />\r\n\t\t\t\t<p className={classes.bookDescription}>{book.volumeInfo.description}</p>\r\n\t\t\t  </div>\r\n\t\t\t</Card>\r\n\t\t\t</Fade>\r\n\t\t  </Modal>\r\n\t\t</div> : null} \r\n\t\t</>\r\n\r\n)\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default BookCard;\r\n\r\n","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Profile.js",["97","98","99","100"],"import React from \"react\";\r\nimport '../App.css';\r\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst InputField = withStyles({\r\n    root:{\r\n        \"& label.Mui-focused\":{\r\n            color: \"#DB5CA2\"\r\n        },\r\n        \"& label\":{\r\n            color: \"5CDB95\",\r\n            fontFamily:\"'Oswald', sans-serif\"\r\n        },\r\n        \"&:hover fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        },\r\n        \"&.Mui-focused fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        }\r\n    }\r\n})(TextField);\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    form:{\r\n        top:\"50%\",\r\n        left:\"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        position: \"absolute\"\r\n    },\r\n    button: {\r\n        marginTop: \"1rem\",\r\n        color: \"#C38D9E\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n        fontFamily:\"'Oswald', sans-serif\"\r\n    },\r\n    header: {\r\n        textAlign: \"center\",\r\n        textTransform:\"uppercase\",\r\n        marginBottom:\"30px\",\r\n        fontFamily: \"font1\",\r\n    },\r\n    text: {\r\n        fontFamily: \"'Oswald', sans-serif\",\r\n        \r\n    },\r\n    word: {\r\n        fontFamily:\"'Oswald', sans-serif\"\r\n    }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Profile = ({userInfo}) =>{\r\n    const classes = useStyles();\r\n\r\n\r\n    return(\r\n        <>\r\n            <InputField \r\n                            label={userInfo.first_name}\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"first_name\"\r\n                            className={classes.text}\r\n            />\r\n            <br/>\r\n            <InputField \r\n                            label={userInfo.surname}\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"surname\"\r\n                            className={classes.text}\r\n            />\r\n            <br />\r\n            <InputField \r\n                            label={userInfo.email}\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"email\"\r\n                            className={classes.text}\r\n            />\r\n            <br />\r\n            <InputField \r\n                            label={userInfo.bio}\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"bio\"\r\n                            className={classes.text}\r\n            />\r\n            <br />\r\n            <InputField \r\n                            label={userInfo.fav_book}\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"fav_book\"\r\n                            className={classes.text}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Profile;",["101","102"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatRoom.js",["103","104","105","106","107"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Chat from \"./Chat\";\r\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst InputField = withStyles({\r\n  root:{\r\n      \"& label.Mui-focused\":{\r\n          color: \"#DB5CA2\"\r\n      },\r\n      \"& label\":{\r\n          color: \"5CDB95\",\r\n          fontFamily:\"'Oswald', sans-serif\"\r\n      },\r\n      \"&:hover fieldSet\":{\r\n          borderColor: \"5CDB95\"\r\n      },\r\n      \"&.Mui-focused fieldSet\":{\r\n          borderColor: \"5CDB95\"\r\n      }\r\n  }\r\n})(TextField);\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n\r\n   heading: {\r\n     textAlign: 'center',\r\n     fontFamily: \"'Abril Fatface', cursive\",\r\n     color: '#fcf3cf',\r\n     fontSize: '5rem',\r\n     letterSpacing: '4px'\r\n\r\n   },\r\n    \r\n    button: {\r\n      marginTop: \"10px\",\r\n      color: \"#C38D9E\",\r\n      borderColor: \"white\",\r\n      borderRadius: \"18px\",\r\n      fontFamily:\"'Oswald', sans-serif\",\r\n      fontSize: '25px',\r\n      textTransform: \"uppercase\",\r\n      textDecoration: \"none\",\r\n      background: \"#fcf3cf\",\r\n      padding: \"10px\",\r\n      display: \"inline-block\",\r\n      border: \"none\",\r\n      \r\n      marginTop: '40px'\r\n    },\r\n    position: {\r\n      top:\"50%\",\r\n        left:\"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        position: \"absolute\",\r\n        \r\n       \r\n    },\r\n    buttonPosition: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    word: {\r\n        fontFamily:\"'Oswald', sans-serif\"\r\n    },\r\n    selectPosition: {\r\n      paddingRight: '15px'\r\n    },\r\n    buttonGenre: {\r\n      marginTop: \"1rem\",\r\n      color: \"#fcf3cf\",\r\n      borderColor: \"white\",\r\n      borderRadius: \"18px\",\r\n      fontFamily:\"'Oswald', sans-serif\",\r\n      paddingRight: \"15px\",\r\n      fontSize: '20px'\r\n  },\r\n   select: {\r\n     gutterBottom: \"1em\",\r\n     borderRadius: '15px'\r\n   },\r\n   joinInput: {\r\n     width: '300px'\r\n   }\r\n  \r\n}))\r\n\r\nconst ChatRoom = () => {\r\n\r\nconst classes = useStyles();\r\n\r\nconst [ name, setName ] = useState('');\r\nconst [ room, setRoom ] = useState('Classics');\r\n\r\nconst [open, setOpen] = useState(false);\r\n\r\nconst handleOpen = () => {\r\n  setOpen(true);\r\n}; \r\n\r\n\r\n\r\n    return (\r\n<>\r\n<NavBar />\r\n    <Box style={{background:\"#718680\", height:\"100vh\"}} >\r\n      <Box className={classes.position}>\r\n        <h1 className={classes.heading}>Join</h1>\r\n        <Box>\r\n          <InputField\r\n           placeholder=\"Name\"\r\n            className={classes.joinInput}\r\n             type=\"text\" \r\n             onChange={(event) => setName(event.target.value)} \r\n\r\n             />\r\n        </Box>\r\n        <Box className={classes.selectPosition}>\r\n        <Button className={classes.buttonGenre} onClick={handleOpen}>\r\n                            select a genre\r\n                        </Button>\r\n        \r\n          <Select \r\n              className={classes.select}\r\n              onChange={event => setRoom(event.target.value)} >\r\n            <MenuItem value='Classics'>Classics</MenuItem>\r\n            <MenuItem value='Fantasy'>Fantasy</MenuItem>\r\n            <MenuItem value='Romance'>Romance</MenuItem>\r\n            <MenuItem value='Magic-Realism'>Magic Realism</MenuItem>\r\n            <MenuItem value='Sci-Fi'>Sci-Fi</MenuItem>\r\n          </Select>\r\n        </Box>\r\n      <Box className={classes.buttonPosition}>\r\n        <Link onClick={e => (!name || !room) ? e.preventDefault() : null} to={`/chat?name=${name}&room=${room}`}>\r\n          <Button className={classes.button} type=\"submit\">Sign In</Button>\r\n        </Link>\r\n        </Box>\r\n      </Box>\r\n     \r\n    </Box>\r\n        </>\r\n    );\r\n}\r\n    \r\n \r\nexport default ChatRoom;\r\n\r\n\r\n\r\n","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Introduction.js",[],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\AboutUs.js",[],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\HowItWorks.js",["108"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\NavBar.js",["109","110"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\LogIn.js",["111","112","113","114","115"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\BookShelf.js",["116","117","118","119","120"],"import React, {useState, useEffect} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\n\r\nimport {  Typography, Grid, Box} from \"@material-ui/core\";\r\nimport { Card, CardMedia,  CardActionArea,  Button  } from \"@material-ui/core\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NavBar from './NavBar';\r\nimport { Link } from 'react-router-dom';\r\n// import { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n//here add the fetch for getting the books by user from the data base and then display them\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    form:{\r\n        top:\"50%\",\r\n        left:\"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        position: \"absolute\"\r\n    },\r\n    button: {\r\n        marginTop: \"1rem\",\r\n        color: \"#C38D9E\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n        fontFamily:\"'Oswald', sans-serif\"\r\n    },\r\n    header: {\r\n        textAlign: \"center\",\r\n        marginBottom:\"30px\",\r\n        fontFamily: \"'Abril Fatface', cursive\",\r\n        color: '#fcf3cf',\r\n        fontSize: '5rem'\r\n    },\r\n    header2: {\r\n        textAlign: \"center\",\r\n        marginBottom:\"30px\",\r\n        fontFamily: \"'Abril Fatface', cursive\",\r\n        color: '#fcf3cf',\r\n        fontSize: '4rem'\r\n    },\r\n    word: {\r\n        fontFamily:\"'Oswald', sans-serif\",\r\n        alignText: 'center',\r\n        textWrap: 'wrap',\r\n        fontWeight:'bold'\r\n    },\r\n    display: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap',\r\n        width: '75%',\r\n        marginLeft: 'auto',\r\n        marginRight:'auto'\r\n    },\r\n    root: {\r\n        width: 200,\r\n        backgroundColor:'#fcf3cf'\r\n      },\r\n    media:{\r\n        height: 170\r\n    },\r\n    select: {\r\n        color: 'black',\r\n        fontWeight:'bold',\r\n        backgroundColor: '#718680'\r\n        \r\n    },\r\n    cat: {\r\n        display: 'flex',\r\n        justifyContent: 'space-around',\r\n        \r\n        alignContent: 'center'\r\n    },\r\n    text: {\r\n        fontFamily: \"'PT Sans', sans-serif\",\r\n        \r\n    },\r\n    button1:{\r\n        marginTop: \"1rem\",\r\n        color: \"black\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n        fontFamily:\"'Oswald', sans-serif\",\r\n        backgroundColor: '#fcf3cf',\r\n        marginBottom: '1rem',\r\n       \r\n    },\r\n    container: {\r\n        border: '2px solid #fcf3cf',\r\n        margin: '20px',\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignText: 'center'\r\n    },\r\n    grid: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '75%',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        marginBottom: '80px'\r\n    },\r\n    text2: {\r\n        fontFamily: \"'PT Sans', sans-serif\",\r\n        color: '#fcf3cf',\r\n        textAlign: 'center',\r\n\r\n    },\r\n    buttonbox: {\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n        marginTop: '1rem'\r\n    }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst BookShelf = () =>{\r\n    const classes = useStyles();\r\n    const [myBooks, setMyBooks] = useState(null)\r\n    const [category, setCategory] = React.useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedBook, setSelectedBook] = useState(false);\r\n\r\n  const handleChange = (event, googleid) => {\r\n    // console.log(event.target.value);\r\n    //add post request here to update database to the correct status\r\n    const books = myBooks\r\n    const newbook = books.map(book=>{\r\n        if(book.googleid === googleid){\r\n            \r\n            return {...book, status: event.target.value}\r\n        }\r\n        else{\r\n            return book\r\n        }\r\n    })\r\n    \r\n  \r\n    setMyBooks(newbook)\r\n  };\r\n\r\n\r\n  \r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  }; \r\n\r\n  \r\n\r\nuseEffect(()=>{  \r\nfetch('http://localhost:3000/mybooks')\r\n.then(response=>{\r\n    if (response.ok) return response.json();\r\n    throw new Error (\"couldn't find your books\")\r\n},(networkError) => {\r\n    console.log(networkError.message);\r\n  })\r\n.then((data)=> setMyBooks(data))\r\n.catch((e) => console.log(e.message));\r\n\r\n}, [])\r\n\r\n\r\n\r\n    return (\r\n    <>\r\n    <NavBar />\r\n    <Box component=\"div\" style={{background:\"#718680\", height:\"100vh\", paddingTop: '100px'}}>\r\n        <Grid container justify=\"center\" className={classes.grid}>\r\n            <Typography variant=\"h2\" className={classes.header}>My Bookshelf</Typography>\r\n            <Typography variant=\"h6\" className={classes.text2}>Here you can organize your Bookshelf, just select the appropriate status of your book, and organize your bookshelf! When you're ready to discuss your book, just click on the button provided an you will be taken to that genre's chatroom! Happy Reading!</Typography>\r\n            <Box className={classes.buttonbox}>\r\n                <Link to=\"/search\" style={{textDecoration:'none'}}>\r\n                <Button className={classes.button1}>Search for more books here</Button>\r\n                </Link>\r\n            </Box>\r\n        </Grid>\r\n                <Box  className={classes.display}>\r\n                {myBooks && myBooks.map((book)=>{\r\n                return(\r\n                <> \r\n                <Card className={classes.root} key={book.googleid} onClick={(e)=>setSelectedBook(book)}>\r\n                    <CardActionArea>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={book.thumbnail}\r\n                        />\r\n                        <Typography gutterBottom variant=\"h6\">\r\n                            {book.title}\r\n                        </Typography>\r\n                        <Button className={classes.button} onClick={handleOpen}>\r\n                            Select Book's Status\r\n                        </Button>\r\n                <FormControl className={classes.formControl}>\r\n                            <Select   \r\n                                value={book.status}\r\n                                onChange={(event)=> handleChange(event, book.googleid)}\r\n                            >\r\n                                <MenuItem value={'reading'}>Reading</MenuItem>\r\n                                <MenuItem value={'to read'}>To Read</MenuItem>\r\n                                <MenuItem value={'have read'}>Have Read</MenuItem>\r\n                            </Select>\r\n                </FormControl>\r\n                    </CardActionArea>\r\n                </Card>\r\n               \r\n            </>\r\n                )})}\r\n            </Box>\r\n            \r\n                    \r\n            <Box style={{background:\"#718680\", height: '10%'}}>\r\n            </Box>\r\n            <Box className={classes.cat} style={{background:\"#718680\", height:\"100vh\", paddingTop: '50px'}}>\r\n                <Box>\r\n                    <Typography variant=\"h3\" className={classes.header2}>To Read</Typography>\r\n                    <Typography>{myBooks && myBooks.map(book=>{if(book.status === 'to read'){\r\n                        return (\r\n                            <Box className={classes.container}>\r\n                            <Typography variant=\"h6\" className={classes.text}>{book.title}</Typography>\r\n                            <Link to=\"/chatroom\" style={{textDecoration: 'none'}}>\r\n                                <Button className={classes.button1}>Discuss this book with others!</Button>\r\n                            </Link>\r\n                            </Box>\r\n                            )\r\n                    }else{return <></>}\r\n                    })}</Typography>\r\n                </Box>\r\n                <Box>\r\n                    <Typography variant=\"h3\" className={classes.header2}>Reading</Typography>\r\n                    <Typography>{myBooks && myBooks.map(book=>{if(book.status === 'reading'){\r\n                        return (\r\n                            <Box className={classes.container}>\r\n                            <Typography variant=\"h6\" className={classes.text}>{book.title}</Typography>\r\n                            <Link to=\"/chatroom\" style={{textDecoration: 'none'}}>\r\n                                <Button className={classes.button1}>Discuss this book with others!</Button>\r\n                            </Link>\r\n                            </Box>\r\n                            )\r\n                    }else {return <></>}\r\n                    })}</Typography>\r\n                </Box>\r\n                <Box>\r\n                    <Typography variant=\"h3\" className={classes.header2}>Have Read</Typography>\r\n                    <Typography>{myBooks && myBooks.map(book=>{if(book.status === 'have read'){\r\n                        return (\r\n                            <Box className={classes.container}>\r\n                            <Typography variant=\"h6\" className={classes.text}>{book.title}</Typography>\r\n                            <Link to=\"/chatroom\" style={{textDecoration: 'none'}}>\r\n                                <Button className={classes.button1}>Discuss this book with others!</Button>\r\n                            </Link>\r\n                            </Box>\r\n                            )\r\n                    }else {return <></>}\r\n                    })}</Typography>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\n//conditional render based on the status, map through the books and only if the status = value then show it there \r\n\r\n\r\n\r\nexport default BookShelf;\r\n","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatMessage.js",[],["121","122"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Register.js",["123"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Search.js",["124"],"import React, {useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\r\n\r\nimport NavBar from './NavBar';\r\nimport BookCard from \"./BookCard\"\r\n\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n// import BookShelf from \"./BookShelf\";\r\n\r\nconst api_key = process.env.REACT_APP_GOOGLE_API_KEY;\r\n\r\nconst InputField = withStyles({\r\n    root:{\r\n        \"& label.Mui-focused\":{\r\n            color: \"#DB5CA2\"\r\n        },\r\n        \"& label\":{\r\n            color: \"5CDB95\",\r\n            fontFamily: \"'Oswald', sans-serif\"\r\n        },\r\n        \"&:hover fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        },\r\n        \"&.Mui-focused fieldSet\":{\r\n            borderColor: \"5CDB95\"\r\n        }\r\n    }\r\n})(TextField);\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    form:{\r\n        top:\"50%\",\r\n        left:\"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        position: \"absolute\"\r\n    },\r\n    button: {\r\n        marginTop: \"1rem\",\r\n        color: \"black\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n        fontFamily:\"'Oswald', sans-serif\",\r\n        backgroundColor: '#fcf3cf'\r\n       \r\n        \r\n    },\r\n    header: {\r\n        textAlign: \"center\",\r\n        marginBottom:\"40px\",\r\n        fontFamily: \"'Abril Fatface', cursive\",\r\n        color:\"#fcf3cf\",\r\n        fontSize: '4rem'\r\n    },\r\n    text:{\r\n        fontFamily: \"'Oswald', sans-serif\",\r\n        textAlign: \"center\",\r\n        // color:\"#fcd392\"\r\n    },\r\n    link:{\r\n        textDecoration: \"none\"\r\n    },\r\n    flex: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        padding: '10px',\r\n        alignContent: 'space-around',\r\n        justifyContent:'space-around',\r\n        backgroundColor:'#718680'\r\n    },\r\n    divs: {\r\n        border: '1px solid black',\r\n        padding: '5px',\r\n        margin: '5px'\r\n\r\n    },\r\n    buttonBox: {\r\n        width:'150px',\r\n        display:'block',\r\n        marginLeft: 'auto',\r\n        marginRight:'auto'\r\n    }\r\n}))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Search = ({props}) =>{\r\n\r\nconst classes = useStyles();\r\n// const history = useHistory();\r\n\r\nconst [query, setQuery] = useState('');\r\nconst [results, setResults] =useState(null)\r\n// const [book, setBook] =useState([]);\r\n\r\nconst handleSearch = (e) =>{\r\n    setQuery(e.target.value)\r\n    // console.log(query)\r\n}\r\n\r\nconst handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n \r\n    axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}&maxResults=18&startIndex=1&key=${api_key}`)\r\n    \r\n    .then(data =>{\r\n        setResults(data.data.items)\r\n        /* console.log(data.data.items) */\r\n    })\r\n    .catch(err=>{\r\n        console.log(err.res)\r\n    }) \r\n}\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n        <NavBar />\r\n        <Box>\r\n            <Box component=\"div\" style={{background:\"#718680\", height:\"100vh\"}}>\r\n                <Grid container justify=\"center\">\r\n                    <Box component=\"form\"  onSubmit={handleSubmit} className={classes.form}>\r\n                        <Typography variant=\"h3\" className={classes.header}>\r\n                            What Book Are You Looking For?\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" className={classes.text}>\r\n                            You can search for a book based on title or author\r\n                        </Typography>\r\n                        <InputField \r\n                            label=\"search for a book\"\r\n                            fullWidth={true}\r\n                            margin=\"dense\"\r\n                            size=\"medium\"\r\n                            name=\"book\"\r\n                            value={query}\r\n                            onChange={handleSearch}\r\n                            type=\"text\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <br />\r\n                        <Box className={classes.buttonBox}>\r\n                            <Button type=\"submit\" onSubmit={handleSubmit}  variant=\"contained\"  fullWidth={true} className={classes.button} >\r\n                                Search\r\n                            </Button>\r\n                            <NavLink to=\"/bookshelf\" className={classes.link}>\r\n                                <Button  variant=\"contained\"  fullWidth={true} className={classes.button} >\r\n                                Go To My Bookshelf\r\n                            </Button>\r\n                            </NavLink>\r\n                        </Box>\r\n                    </Box> \r\n                   \r\n                </Grid>\r\n\r\n        \r\n           </Box>\r\n\r\n           <Box className={classes.flex}>\r\n           {results && results.map((book) => {\r\n               console.log(book)\r\n               \r\n               return (\r\n            <BookCard book={book} />\r\n           )})}\r\n           </Box>\r\n    </Box>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Search;","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatMessages.js",[],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Chat.js",["125","126","127","128"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport InfoBar from './InfoBar';\r\nimport Input from './ChatInput';\r\nimport Messages from './ChatMessages';\r\n\r\nimport { Box, Card } from '@material-ui/core';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\r\n\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n\r\n    heading: {\r\n      alignText: 'center',\r\n     fontFamily:\"'Oswald', sans-serif\"\r\n \r\n    },\r\n     \r\n     button: {\r\n         marginTop: \"1rem\",\r\n         color: \"#C38D9E\",\r\n         borderColor: \"white\",\r\n         borderRadius: \"18px\",\r\n         fontFamily:\"'Oswald', sans-serif\"\r\n     },\r\n     position: {\r\n        \r\n       top:\"50%\",\r\n         left:\"50%\",\r\n         transform: \"translate(-50%, -50%)\",\r\n         position: \"absolute\",\r\n        \r\n        \r\n     },\r\n     buttonPosition: {\r\n         display: 'flex',\r\n         justifyContent: 'center'\r\n     },\r\n     word: {\r\n         fontFamily:\"'Oswald', sans-serif\"\r\n     },\r\n     roomPosition: {\r\n         display: 'flex',\r\n         justifyContent: 'center'\r\n     },\r\n     outerContainer: {\r\n          backgroundColor: '#718680',\r\n     }, \r\n     textArea: {\r\n         padding: '20px',\r\n         height: '300px',\r\n         width: '300px',\r\n         color: '#fcf3cf',\r\n        \r\n     }\r\n }))\r\n\r\n const ENDPOINT = \"http://localhost:3000\";\r\n const socket = io.connect(ENDPOINT, {\r\n   // withCredentials: true,\r\n   extraHeaders: {\r\n       \"Bookster\":\"x-secret-token\"\r\n   }\r\n});\r\n\r\n\r\nconst Chat = () => {  \r\n    const classes = useStyles();\r\n let location = useLocation();\r\nconst [ name, setName ] = useState('');\r\nconst [ room, setRoom ] = useState('');\r\nconst [ message, setMessage ] = useState('');\r\nconst [ messages, setMessages ] = useState([]);\r\nconst [ users, setUsers ] = useState([]);\r\n\r\n\r\nconst socketRef = useRef();\r\n\r\n\r\n//This useEffect joins the user to the room\r\n\r\nuseEffect(() => {\r\n    const { name, room } = queryString.parse(location.search, {\r\n        ignoreQueryPrefix: true\r\n    });\r\n    \r\n     socketRef.current = io(ENDPOINT, {\r\n        // withCredentials: true,\r\n        extraHeaders: {\r\n            \"Bookster\":\"x-secret-token\"\r\n        }\r\n    });\r\n \r\n    setName(name);\r\n    \r\n    setRoom(room); \r\n    \r\n\r\n    socketRef.current.emit('join', { name, room }, (error) => {\r\n        if(error){\r\n            alert(error);\r\n        }\r\n    });\r\n\r\n},[ENDPOINT, location.search]);\r\n\r\n// This useEffect will handle messages\r\n//We will keep track of all messages using a state called 'messages' and inside \r\n//the messages we will have an array that will store all messages.Then we need to \r\n//also specify each message so we will keep this in a state called 'message' \r\n\r\nuseEffect(() => {\r\n    \r\n    socketRef.current.on('message', message => {\r\n        // This sends each message sent to our messages array.\r\n        setMessages(messages => [...messages, message]);\r\n        });\r\n\r\n        socketRef.current.on('roomData', ({users}) => {\r\n            setUsers(users);\r\n           \r\n        });\r\n        console.log(users)\r\n    }, []);\r\n\r\nconst sendMessage = (event) => {\r\n    event.preventDefault();\r\n    if(message) {\r\n        socketRef.current.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n}\r\nconsole.log(message, messages);\r\n\r\n\r\n return(  \r\n\r\n    <Card>\r\n    <Box style={{background:\"#718680\", height:\"100vh\"}}>\r\n        <Box >\r\n            <Box className={classes.roomPosition}>\r\n               <InfoBar room={room} />\r\n            </Box>\r\n            <Box className={classes.position}>\r\n                <Box className={classes.textArea}>\r\n                <Messages messages={messages} name={name} />\r\n                </Box>\r\n                <Box>\r\n                <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n                </Box>\r\n            </Box>\r\n                \r\n            </Box>\r\n         \r\n        </Box>\r\n    </Card>\r\n\r\n    );\r\n}\r\nexport default Chat;\r\n\r\n","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\ChatInput.js",["129"],"import React from 'react';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\r\nimport { TextField, Button, Box } from '@material-ui/core';\r\n\r\n// const InputField = withStyles({\r\n//     root:{\r\n//         \"& label.Mui-focused\":{\r\n//             color: \"#DB5CA2\"\r\n//         },\r\n//         \"& label\":{\r\n//             color: \"5CDB95\",\r\n//             fontFamily:\"'Oswald', sans-serif\"\r\n//         },\r\n//         \"&:hover fieldSet\":{\r\n//             borderColor: \"5CDB95\"\r\n//         },\r\n//         \"&.Mui-focused fieldSet\":{\r\n//             borderColor: \"5CDB95\"\r\n//         }\r\n//     }\r\n//   })(TextField);\r\n\r\n  const useStyles = makeStyles(theme=>({\r\n\r\n    heading: {\r\n      alignText: 'center',\r\n     fontFamily:\"'Oswald', sans-serif\"\r\n \r\n    },\r\n    button: {\r\n        marginTop: \"10px\",\r\n        color: \"#C38D9E\",\r\n        borderColor: \"white\",\r\n        borderRadius: \"18px\",\r\n        fontFamily:\"'Oswald', sans-serif\",\r\n        textTransform: \"uppercase\",\r\n        textDecoration: \"none\",\r\n        background: \"#fcf3cf\",\r\n        padding: \"10px\",\r\n        display: \"inline-block\",\r\n        border: \"none\",\r\n        width: \"20%\"\r\n    },\r\n    pageColor: {\r\n        backgroundColor: '#718680'\r\n    },\r\n    form: {\r\n      display: \"flex\",\r\n      borderTop: \"2px solid\",\r\n\r\n    },\r\n    input: {\r\n      border: \"none\",\r\n      borderRadius: \"0\",\r\n      padding: \"5%\",\r\n      width: \"80%\",\r\n      fontSize: \"1.2em\"\r\n\r\n    }\r\n\r\n  }));\r\n\r\n\r\nconst Input = ({ setMessage, sendMessage, message }) => {\r\n\r\n    const classes = useStyles();\r\n\r\nreturn(\r\n<Box className={classes.pageColor}>\r\n  <form className={classes.form}>\r\n  <Box>\r\n    <TextField\r\n      className={classes.input}\r\n      type=\"text\"\r\n      placeholder=\"Type a message...\"\r\n      value={message}\r\n      onChange={({ target: { value } }) => setMessage(value)}\r\n      onKeyPress={event => event.key === 'Enter' ? sendMessage(event) : null}\r\n    />\r\n    </Box>\r\n    <Button className={classes.button} onClick={e => sendMessage(e)}>Send</Button>\r\n  </form>\r\n</Box>\r\n)\r\n}\r\n\r\nexport default Input;",["130","131"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\Footer.js",["132","133"],"C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\components\\InfoBar.js",["134"],"import React from 'react';\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n\r\n  infoBar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    background: \"#fcf3cf\",\r\n    borderRadius: \"4px 4px 0 0\",\r\n    height: \"60px\",\r\n    width: \"100%\"\r\n\r\n  },\r\n\r\n  leftInnerContainer: {\r\n    flex: \"0.5\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: \"5%\",\r\n    color: \"black\",\r\n    \r\n\r\n  },\r\n  rightInnerContainer: {\r\n    display: \"flex\",\r\n  flex: \"0.5\",\r\n  justifyContent: \"flex-end\",\r\n  marginRight: \"5%\"\r\n      \r\n  },\r\n  roomName: {\r\n      fontSize: \"30px\",\r\n      fontFamily: \"'Abril Fatface', cursive\",\r\n      letterSpacing: '1px',\r\n      padding: '10px'\r\n  },\r\n  icon: {\r\n    width: \"20px\",\r\n    color: '#b2837a'\r\n  },\r\n  closeIcon: {\r\n    color: '#b2837a'\r\n  }\r\n  \r\n  \r\n\r\n}));\r\n\r\n\r\n\r\n\r\nconst InfoBar = ({ room }) => {\r\n\r\n  const classes = useStyles();\r\n\r\nreturn(\r\n  <Box className={classes.infoBar}>\r\n    <Box className={classes.leftInnerContainer}>\r\n    <FiberManualRecordIcon className={classes.icon} />\r\n      <h3 className={classes.roomName}>{room} </h3>\r\n    </Box>\r\n    <Box className={classes.rightInnerContainer}>\r\n        <a href=\"/chatroom\"><CloseIcon className={classes.closeIcon}/></a>\r\n    </Box>\r\n    \r\n  </Box>\r\n)\r\n}\r\n\r\nexport default InfoBar;","C:\\Users\\janto\\Desktop\\projects\\BooksterFrontend\\src\\hook\\windowPosition.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":1,"column":16,"nodeType":"141","messageId":"142","endLine":1,"endColumn":24},{"ruleId":"139","severity":1,"message":"143","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":20},{"ruleId":"139","severity":1,"message":"144","line":5,"column":16,"nodeType":"141","messageId":"142","endLine":5,"endColumn":25},{"ruleId":"139","severity":1,"message":"145","line":5,"column":27,"nodeType":"141","messageId":"142","endLine":5,"endColumn":38},{"ruleId":"139","severity":1,"message":"146","line":5,"column":40,"nodeType":"141","messageId":"142","endLine":5,"endColumn":50},{"ruleId":"139","severity":1,"message":"143","line":3,"column":21,"nodeType":"141","messageId":"142","endLine":3,"endColumn":31},{"ruleId":"139","severity":1,"message":"147","line":3,"column":33,"nodeType":"141","messageId":"142","endLine":3,"endColumn":39},{"ruleId":"139","severity":1,"message":"148","line":3,"column":41,"nodeType":"141","messageId":"142","endLine":3,"endColumn":45},{"ruleId":"139","severity":1,"message":"149","line":3,"column":47,"nodeType":"141","messageId":"142","endLine":3,"endColumn":50},{"ruleId":"135","replacedBy":"150"},{"ruleId":"137","replacedBy":"151"},{"ruleId":"139","severity":1,"message":"152","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":12},{"ruleId":"139","severity":1,"message":"143","line":4,"column":21,"nodeType":"141","messageId":"142","endLine":4,"endColumn":31},{"ruleId":"139","severity":1,"message":"148","line":4,"column":41,"nodeType":"141","messageId":"142","endLine":4,"endColumn":45},{"ruleId":"153","severity":1,"message":"154","line":56,"column":7,"nodeType":"155","messageId":"156","endLine":56,"endColumn":16},{"ruleId":"139","severity":1,"message":"157","line":102,"column":8,"nodeType":"141","messageId":"142","endLine":102,"endColumn":12},{"ruleId":"139","severity":1,"message":"146","line":2,"column":33,"nodeType":"141","messageId":"142","endLine":2,"endColumn":43},{"ruleId":"139","severity":1,"message":"158","line":17,"column":39,"nodeType":"141","messageId":"142","endLine":17,"endColumn":50},{"ruleId":"139","severity":1,"message":"159","line":17,"column":52,"nodeType":"141","messageId":"142","endLine":17,"endColumn":72},{"ruleId":"139","severity":1,"message":"160","line":6,"column":10,"nodeType":"141","messageId":"142","endLine":6,"endColumn":18},{"ruleId":"139","severity":1,"message":"161","line":6,"column":26,"nodeType":"141","messageId":"142","endLine":6,"endColumn":33},{"ruleId":"139","severity":1,"message":"162","line":7,"column":8,"nodeType":"141","messageId":"142","endLine":7,"endColumn":17},{"ruleId":"139","severity":1,"message":"163","line":69,"column":11,"nodeType":"141","messageId":"142","endLine":69,"endColumn":18},{"ruleId":"139","severity":1,"message":"164","line":76,"column":12,"nodeType":"141","messageId":"142","endLine":76,"endColumn":27},{"ruleId":"139","severity":1,"message":"165","line":127,"column":12,"nodeType":"141","messageId":"142","endLine":127,"endColumn":20},{"ruleId":"139","severity":1,"message":"166","line":127,"column":22,"nodeType":"141","messageId":"142","endLine":127,"endColumn":33},{"ruleId":"139","severity":1,"message":"157","line":128,"column":12,"nodeType":"141","messageId":"142","endLine":128,"endColumn":16},{"ruleId":"139","severity":1,"message":"167","line":129,"column":12,"nodeType":"141","messageId":"142","endLine":129,"endColumn":24},{"ruleId":"139","severity":1,"message":"168","line":152,"column":9,"nodeType":"141","messageId":"142","endLine":152,"endColumn":20},{"ruleId":"135","replacedBy":"169"},{"ruleId":"137","replacedBy":"170"},{"ruleId":"139","severity":1,"message":"171","line":1,"column":27,"nodeType":"141","messageId":"142","endLine":1,"endColumn":36},{"ruleId":"139","severity":1,"message":"172","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"173","line":8,"column":22,"nodeType":"141","messageId":"142","endLine":8,"endColumn":32},{"ruleId":"139","severity":1,"message":"174","line":65,"column":8,"nodeType":"141","messageId":"142","endLine":65,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":111,"column":3,"nodeType":"177","endLine":111,"endColumn":30,"suggestions":"178"},{"ruleId":"175","severity":1,"message":"179","line":130,"column":8,"nodeType":"177","endLine":130,"endColumn":10,"suggestions":"180"},{"ruleId":"139","severity":1,"message":"173","line":2,"column":22,"nodeType":"141","messageId":"142","endLine":2,"endColumn":32},{"ruleId":"135","replacedBy":"181"},{"ruleId":"137","replacedBy":"182"},{"ruleId":"139","severity":1,"message":"172","line":5,"column":52,"nodeType":"141","messageId":"142","endLine":5,"endColumn":56},{"ruleId":"139","severity":1,"message":"149","line":5,"column":58,"nodeType":"141","messageId":"142","endLine":5,"endColumn":61},{"ruleId":"139","severity":1,"message":"173","line":2,"column":22,"nodeType":"141","messageId":"142","endLine":2,"endColumn":32},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'CardHeader' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.",["183"],["184"],"'Chat' is defined but never used.","no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","unexpected","'open' is assigned a value but never used.","'ContactMail' is defined but never used.","'SettingsInputAntenna' is defined but never used.","'Redirect' is defined but never used.","'NavLink' is defined but never used.","'BookShelf' is defined but never used.","'history' is assigned a value but never used.","'updatedUserInfo' is assigned a value but never used.","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'selectedBook' is assigned a value but never used.","'handleClose' is assigned a value but never used.",["183"],["184"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'withStyles' is defined but never used.","'socket' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'ENDPOINT'. Either exclude it or remove the dependency array. Outer scope values like 'ENDPOINT' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["185"],"React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["186"],["183"],["184"],"no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},"Update the dependencies array to be: [location.search]",{"range":"191","text":"192"},"Update the dependencies array to be: [users]",{"range":"193","text":"194"},[2482,2509],"[location.search]",[3162,3164],"[users]"]